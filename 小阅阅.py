"""
* 仅供学习交流，请在下载后的24小时内完全删除 请勿将任何内容用于商业或非法目的，否则后果自负。
* 幻生魔改自用版 V1.40

* 活动入口,微信打开：
* 如果连接过期了运行一下就出来了最新的入口！
* https://u7ds.sy673.shop/yunonline/v1/auth/2639bb95daba1d99e5338a8c2e21e2f0?codeurl=u7ds.sy673.shop&codeuserid=2&time=1709021176
* 打开活动入口，抓包的任意接口cookies中的ysm_uid参数
* 
* 变量格式：
* 新建同名环境变量
* 变量名：xyyyd
* 变量值：
* # 3000 代表 3毛，后面两个推送参数可不填，那就必须配置全局推送！
* 账号备注#ysm_uid参数#unionId#提现金额如3000#wxpushApptoken#wxpushTopicId
* 
* 其他参数说明（脚本最下方填写参数）
* wxpusher全局参数：wxpusherAppToken、wxpusherTopicId
* 具体使用方法请看文档地址：https://wxpusher.zjiecode.com/docs/#/
* 
* 也可使用 微信机器人：wechatBussinessKey
* 
* 支持支付宝提现：账号备注#ysm_uid参数#unionId#提现金额如3000#wxpushApptoken#wxpushTopicId#支付宝姓名#支付宝账号
* 只想提现支付宝，不想填写其他参数，最少的参数就是：账号备注#ysm_uid参数#unionId####支付宝姓名#支付宝账号
*
* 定时运行每半小时一次
* 达到标准自动提现
* 达到标准，自动提现
"""
# This file requires Python 3.x and the following dependencies:
# - base64
try:
    import base64
    exec(base64.b64decode('IiIiCiog5LuF5L6b5a2m5Lmg5Lqk5rWB77yM6K+35Zyo5LiL6L295ZCO55qEMjTlsI/ml7blhoXlrozlhajliKDpmaQg6K+35Yu/5bCG5Lu75L2V5YaF5a6555So5LqO5ZWG5Lia5oiW6Z2e5rOV55uu55qE77yM5ZCm5YiZ5ZCO5p6c6Ieq6LSf44CCCiog5bm755Sf6a2U5pS56Ieq55So54mIIFYxLjQwCgoqIOa0u+WKqOWFpeWPoyzlvq7kv6HmiZPlvIDvvJoKKiDlpoLmnpzov57mjqXov4fmnJ/kuobov5DooYzkuIDkuIvlsLHlh7rmnaXkuobmnIDmlrDnmoTlhaXlj6PvvIEKKiBodHRwczovL3U3ZHMuc3k2NzMuc2hvcC95dW5vbmxpbmUvdjEvYXV0aC8yNjM5YmI5NWRhYmExZDk5ZTUzMzhhOGMyZTIxZTJmMD9jb2RldXJsPXU3ZHMuc3k2NzMuc2hvcCZjb2RldXNlcmlkPTImdGltZT0xNzA5MDIxMTc2Ciog5omT5byA5rS75Yqo5YWl5Y+j77yM5oqT5YyF55qE5Lu75oSP5o6l5Y+jY29va2llc+S4reeahHlzbV91aWTlj4LmlbAKKiAKKiDlj5jph4/moLzlvI/vvJoKKiDmlrDlu7rlkIzlkI3njq/looPlj5jph48KKiDlj5jph4/lkI3vvJp4eXl5ZAoqIOWPmOmHj+WAvO+8mgoqICMgMzAwMCDku6PooaggM+avm++8jOWQjumdouS4pOS4quaOqOmAgeWPguaVsOWPr+S4jeWhq++8jOmCo+WwseW/hemhu+mFjee9ruWFqOWxgOaOqOmAge+8gQoqIOi0puWPt+Wkh+azqCN5c21fdWlk5Y+C5pWwI3VuaW9uSWQj5o+Q546w6YeR6aKd5aaCMzAwMCN3eHB1c2hBcHB0b2tlbiN3eHB1c2hUb3BpY0lkCiogCiog5YW25LuW5Y+C5pWw6K+05piO77yI6ISa5pys5pyA5LiL5pa55aGr5YaZ5Y+C5pWw77yJCiogd3hwdXNoZXLlhajlsYDlj4LmlbDvvJp3eHB1c2hlckFwcFRva2Vu44CBd3hwdXNoZXJUb3BpY0lkCiog5YW35L2T5L2/55So5pa55rOV6K+355yL5paH5qGj5Zyw5Z2A77yaaHR0cHM6Ly93eHB1c2hlci56amllY29kZS5jb20vZG9jcy8jLwoqIAoqIOS5n+WPr+S9v+eUqCDlvq7kv6HmnLrlmajkurrvvJp3ZWNoYXRCdXNzaW5lc3NLZXkKKiAKKiDmlK/mjIHmlK/ku5jlrp3mj5DnjrDvvJrotKblj7flpIfms6gjeXNtX3VpZOWPguaVsCN1bmlvbklkI+aPkOeOsOmHkemineWmgjMwMDAjd3hwdXNoQXBwdG9rZW4jd3hwdXNoVG9waWNJZCPmlK/ku5jlrp3lp5PlkI0j5pSv5LuY5a6d6LSm5Y+3Ciog5Y+q5oOz5o+Q546w5pSv5LuY5a6d77yM5LiN5oOz5aGr5YaZ5YW25LuW5Y+C5pWw77yM5pyA5bCR55qE5Y+C5pWw5bCx5piv77ya6LSm5Y+35aSH5rOoI3lzbV91aWTlj4LmlbAjdW5pb25JZCMjIyPmlK/ku5jlrp3lp5PlkI0j5pSv5LuY5a6d6LSm5Y+3CioKKiDlrprml7bov5DooYzmr4/ljYrlsI/ml7bkuIDmrKEKKiDovr7liLDmoIflh4boh6rliqjmj5DnjrAKKiDovr7liLDmoIflh4bvvIzoh6rliqjmj5DnjrAKIiIiCiIiICAjIGxpbmU6Mjk6IiIiCmltcG9ydCBoYXNobGliICAjIGxpbmU6MzE6aW1wb3J0IGhhc2hsaWIKaW1wb3J0IGpzb24gICMgbGluZTozMjppbXBvcnQganNvbgppbXBvcnQgbWF0aCAgIyBsaW5lOjMzOmltcG9ydCBtYXRoCmltcG9ydCBvcyAgIyBsaW5lOjM0OmltcG9ydCBvcwppbXBvcnQgc3RyaW5nICAjIGxpbmU6MzU6aW1wb3J0IHN0cmluZwppbXBvcnQgdGltZSAgIyBsaW5lOjM2OmltcG9ydCB0aW1lCmltcG9ydCByZXF1ZXN0cyAgIyBsaW5lOjM3OmltcG9ydCByZXF1ZXN0cwppbXBvcnQgcmFuZG9tICAjIGxpbmU6Mzg6aW1wb3J0IHJhbmRvbQppbXBvcnQgcmUgICMgbGluZTozOTppbXBvcnQgcmUKZnJvbSB1cmxsaWIucGFyc2UgaW1wb3J0ICgKICAgIHF1b3RlLAogICAgdXJscGFyc2UsCiAgICBwYXJzZV9xcywKKSAgIyBsaW5lOjQwOmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCBxdW90ZSwgdXJscGFyc2UsIHBhcnNlX3FzCmltcG9ydCB1cmxsaWIzICAjIGxpbmU6NDE6aW1wb3J0IHVybGxpYjMKZnJvbSB1cmxsaWIucGFyc2UgaW1wb3J0ICgKICAgIHBhcnNlX3FzLAogICAgdXJsc3BsaXQsCikgICMgbGluZTo0Mjpmcm9tIHVybGxpYi5wYXJzZSBpbXBvcnQgcGFyc2VfcXMsIHVybHNwbGl0Cgp1cmxsaWIzLmRpc2FibGVfd2FybmluZ3MoKSAgIyBsaW5lOjQ0OnVybGxpYjMuZGlzYWJsZV93YXJuaW5ncygpCnd4cHVzaGVyQXBwVG9rZW4gPSAoCiAgICBvcy5nZXRlbnYoInd4cHVzaGVyQXBwVG9rZW4iKSBvciAiIgopICAjIGxpbmU6NDc6d3hwdXNoZXJBcHBUb2tlbiA9IG9zLmdldGVudigid3hwdXNoZXJBcHBUb2tlbiIpIG9yICIiCnd4cHVzaGVyVG9waWNJZCA9ICgKICAgIG9zLmdldGVudigid3hwdXNoZXJUb3BpY0lkIikgb3IgIiIKKSAgIyBsaW5lOjQ4Ond4cHVzaGVyVG9waWNJZCA9IG9zLmdldGVudigid3hwdXNoZXJUb3BpY0lkIikgb3IgIiIKd2VjaGF0QnVzc2luZXNzS2V5ID0gKAogICAgb3MuZ2V0ZW52KCJ3ZWNoYXRCdXNzaW5lc3NLZXkiKSBvciAiIgopICAjIGxpbmU6NDk6d2VjaGF0QnVzc2luZXNzS2V5ID0gb3MuZ2V0ZW52KCJ3ZWNoYXRCdXNzaW5lc3NLZXkiKSBvciAiIgoKCmRlZiBwdXNoKAogICAgT08wMDBPT09PT09PTzAwT08sCiAgICBPTzBPTzAwTzBPMDAwMDAwMCwKICAgIE8wME9PT09PME8wT08wT08wLAogICAgT08wTzBPMDAwTzBPTzAwME8sCiAgICBPTzBPTzAwME8wTzAwT08wTywKICAgIE8wMDBPME9PME8wTzAwME8wLAopOiAgIyBsaW5lOjUyOmRlZiBwdXNoKGFwcFRva2VuLCB0b3BpY0lkcywgdGl0bGUsIGxpbmssIHRleHQsIHR5cGUpOgogICAgTzBPTzAwTzBPME9PTzBPME8gPSB7CiAgICAgICAgImFwcFRva2VuIjogT08wMDBPT09PT09PTzAwT08sCiAgICAgICAgImNvbnRlbnQiOiBmIiIiPGJvZHkgb25sb2FkPSJ3aW5kb3cubG9jYXRpb24uaHJlZj0ne09PME8wTzAwME8wT08wMDBPfSciPuWHuueOsOajgOa1i+aWh+eroO+8ge+8ge+8gVxuPGEgc3R5bGU9J3BhZGRpbmc6MTBweDtjb2xvcjpyZWQ7Zm9udC1zaXplOjIwcHg7JyBocmVmPSd7bGlua30nPueCueWHu+aIkeaJk+W8gOW+heajgOa1i+aWh+eroDwvYT5cbuivt+WwveW/q+eCueWHu+mTvuaOpeWujOaIkOmYheivu1xu5aSH5rOo77yae09PME9PMDAwTzBPMDBPTzBPfTwvYm9keT4iIiIsCiAgICAgICAgInN1bW1hcnkiOiBPMDBPT09PTzBPME9PME9PMCBvciAi5bCP6ZiF6ZiF6ZiF6K+7IiwKICAgICAgICAiY29udGVudFR5cGUiOiAyLAogICAgICAgICJ0b3BpY0lkcyI6IFtPTzBPTzAwTzBPMDAwMDAwMCBvciAiMTE2ODYiXSwKICAgICAgICAidXJsIjogT08wTzBPMDAwTzBPTzAwME8sCiAgICB9ICAjIGxpbmU6NjA6fQogICAgT08wT08wTzAwTzBPMDBPME8gPSAiaHR0cDovL3d4cHVzaGVyLnpqaWVjb2RlLmNvbS9hcGkvc2VuZC9tZXNzYWdlIiAgIyBsaW5lOjYyOnVybHB1c3QgPSAiaHR0cDovL3d4cHVzaGVyLnpqaWVjb2RlLmNvbS9hcGkvc2VuZC9tZXNzYWdlIgogICAgdHJ5OiAgIyBsaW5lOjYzOnRyeToKICAgICAgICBPT08wMDBPT08wT09PME8wMCA9IHJlcXVlc3RzLnBvc3QoCiAgICAgICAgICAgIHVybD1PTzBPTzBPMDBPME8wME8wTywganNvbj1PME9PMDBPME8wT09PME8wTywgdmVyaWZ5PUZhbHNlCiAgICAgICAgKSAgIyBsaW5lOjY0OnAgPSByZXF1ZXN0cy5wb3N0KHVybD11cmxwdXN0LCBqc29uPWRhdGFwdXN0LCB2ZXJpZnk9RmFsc2UpCiAgICAgICAgaWYgKAogICAgICAgICAgICBPT08wMDBPT08wT09PME8wMC5qc29uKClbImNvZGUiXSA9PSAxMDAwCiAgICAgICAgKTogICMgbGluZTo2NjppZiBwLmpzb24oKVsiY29kZSJdID09IDEwMDA6CiAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgIuKchSDmjqjpgIHmlofnq6DliLDlvq7kv6HmiJDlip/vvIzor7flsL3lv6vliY3lvoDngrnlh7vmlofnq6DvvIzkuI3nhLblsLHpu5Hlj7fllabvvIEiCiAgICAgICAgICAgICkgICMgbGluZTo2NzpwcmludCgi4pyFIOaOqOmAgeaWh+eroOWIsOW+ruS/oeaIkOWKn++8jOivt+WwveW/q+WJjeW+gOeCueWHu+aWh+eroO+8jOS4jeeEtuWwsem7keWPt+WVpu+8gSIpCiAgICAgICAgICAgIHJldHVybiBUcnVlICAjIGxpbmU6Njg6cmV0dXJuIFRydWUKICAgICAgICBlbHNlOiAgIyBsaW5lOjY5OmVsc2U6CiAgICAgICAgICAgIHByaW50KCLinYwg5o6o6YCB5paH56ug5Yiw5b6u5L+h5aSx6LSl77yM5a6M54qK5a2Q77yM6KaB6buR5Y+35LqG77yBIikgICMgbGluZTo3MDpwcmludCgi4p2MIOaOqOmAgeaWh+eroOWIsOW+ruS/oeWksei0pe+8jOWujOeKiuWtkO+8jOimgem7keWPt+S6hu+8gSIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjcxOnJldHVybiBGYWxzZQogICAgZXhjZXB0OiAgIyBsaW5lOjcyOmV4Y2VwdDoKICAgICAgICBwcmludCgi4p2MIOaOqOmAgeaWh+eroOWIsOW+ruS/oeWksei0pe+8jOWujOeKiuWtkO+8jOimgem7keWPt+S6hu+8gSIpICAjIGxpbmU6NzM6cHJpbnQoIuKdjCDmjqjpgIHmlofnq6DliLDlvq7kv6HlpLHotKXvvIzlrozniorlrZDvvIzopoHpu5Hlj7fkuobvvIEiKQogICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjc0OnJldHVybiBGYWxzZQoKCmRlZiBwdXNoV2VjaGF0QnVzc2luZXNzKAogICAgTzAwTzAwT08wT09PTzBPTzAsIE8wME9PME9PMDBPMDAwME8wCik6ICAjIGxpbmU6Nzc6ZGVmIHB1c2hXZWNoYXRCdXNzaW5lc3Mocm9ib3RLZXksIGxpbmspOgogICAgT09PTzBPT09PME8wT08wT08gPSB7CiAgICAgICAgIm1zZ3R5cGUiOiAidGV4dCIsCiAgICAgICAgInRleHQiOiB7ImNvbnRlbnQiOiBPMDBPTzBPTzAwTzAwMDBPMH0sCiAgICB9ICAjIGxpbmU6Nzg6ZGF0YXB1c3QgPSB7Im1zZ3R5cGUiOiAidGV4dCIsICJ0ZXh0IjogeyJjb250ZW50IjogbGlua319CiAgICBPME9PT08wT09PME8wME9PMCA9ICgKICAgICAgICAiaHR0cHM6Ly9xeWFwaS53ZWl4aW4ucXEuY29tL2NnaS1iaW4vd2ViaG9vay9zZW5kP2tleT0iICsgTzAwTzAwT08wT09PTzBPTzAKICAgICkgICMgbGluZTo4MDp1cmxwdXN0ID0gImh0dHBzOi8vcXlhcGkud2VpeGluLnFxLmNvbS9jZ2ktYmluL3dlYmhvb2svc2VuZD9rZXk9IiArIHJvYm90S2V5CiAgICB0cnk6ICAjIGxpbmU6ODE6dHJ5OgogICAgICAgIE9PMDAwT09PTzAwMDBPT09PID0gcmVxdWVzdHMucG9zdCgKICAgICAgICAgICAgdXJsPU8wT09PTzBPT08wTzAwT08wLCBqc29uPU9PT08wT09PTzBPME9PME9PLCB2ZXJpZnk9RmFsc2UKICAgICAgICApICAjIGxpbmU6ODI6cCA9IHJlcXVlc3RzLnBvc3QodXJsPXVybHB1c3QsIGpzb249ZGF0YXB1c3QsIHZlcmlmeT1GYWxzZSkKICAgICAgICBpZiAoCiAgICAgICAgICAgIE9PMDAwT09PTzAwMDBPT09PLmpzb24oKVsiZXJyY29kZSJdID09IDAKICAgICAgICApOiAgIyBsaW5lOjg0OmlmIHAuanNvbigpWyJlcnJjb2RlIl0gPT0gMDoKICAgICAgICAgICAgcHJpbnQoIuKchSDmjqjpgIHmlofnq6DliLDkvIHkuJrlvq7kv6HmiJDlip/vvIEiKSAgIyBsaW5lOjg1OnByaW50KCLinIUg5o6o6YCB5paH56ug5Yiw5LyB5Lia5b6u5L+h5oiQ5Yqf77yBIikKICAgICAgICAgICAgcmV0dXJuIFRydWUgICMgbGluZTo4NjpyZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6ICAjIGxpbmU6ODc6ZWxzZToKICAgICAgICAgICAgcHJpbnQoIuKdjCDmjqjpgIHmlofnq6DliLDkvIHkuJrlvq7kv6HlpLHotKXvvIEiKSAgIyBsaW5lOjg4OnByaW50KCLinYwg5o6o6YCB5paH56ug5Yiw5LyB5Lia5b6u5L+h5aSx6LSl77yBIikKICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAjIGxpbmU6ODk6cmV0dXJuIEZhbHNlCiAgICBleGNlcHQ6ICAjIGxpbmU6OTA6ZXhjZXB0OgogICAgICAgIHByaW50KCLinYwg5o6o6YCB5paH56ug5Yiw5LyB5Lia5b6u5L+h5aSx6LSl77yBIikgICMgbGluZTo5MTpwcmludCgi4p2MIOaOqOmAgeaWh+eroOWIsOS8geS4muW+ruS/oeWksei0pe+8gSIpCiAgICAgICAgcmV0dXJuIEZhbHNlICAjIGxpbmU6OTI6cmV0dXJuIEZhbHNlCgoKZGVmIGdldGluZm8oTzAwT08wT08wTzBPMDBPME8pOiAgIyBsaW5lOjk1OmRlZiBnZXRpbmZvKGxpbmspOgogICAgdHJ5OiAgIyBsaW5lOjk2OnRyeToKICAgICAgICBPME9PME8wT08wTzAwTzBPTyA9IHJlcXVlc3RzLmdldCgKICAgICAgICAgICAgTzAwT08wT08wTzBPMDBPME8sIHZlcmlmeT1GYWxzZQogICAgICAgICkgICMgbGluZTo5NzpyID0gcmVxdWVzdHMuZ2V0KGxpbmssIHZlcmlmeT1GYWxzZSkKICAgICAgICBPTzAwMDAwMDBPT09PT08wTyA9IHJlLnN1YigKICAgICAgICAgICAgIlxzIiwgIiIsIE8wT08wTzBPTzBPMDBPME9PLnRleHQKICAgICAgICApICAjIGxpbmU6OTk6aHRtbCA9IHJlLnN1YigiXHMiLCAiIiwgci50ZXh0KQogICAgICAgIE8wMDBPT09PT08wMDAwMDAwID0gcmUuZmluZGFsbCgKICAgICAgICAgICAgJ3ZhcmJpej0iKC4qPykiXHxcfCcsIE9PMDAwMDAwME9PT09PTzBPCiAgICAgICAgKSAgIyBsaW5lOjEwMDpiaXogPSByZS5maW5kYWxsKCd2YXJiaXo9IiguKj8pIlx8XHwnLCBodG1sKQogICAgICAgIGlmIE8wMDBPT09PT08wMDAwMDAwICE9IFtdOiAgIyBsaW5lOjEwMTppZiBiaXogIT0gW106CiAgICAgICAgICAgIE8wMDBPT09PT08wMDAwMDAwID0gTzAwME9PT09PTzAwMDAwMDBbMF0gICMgbGluZToxMDI6Yml6ID0gYml6WzBdCiAgICAgICAgaWYgKAogICAgICAgICAgICBPMDAwT09PT09PMDAwMDAwMCA9PSAiIiBvciBPMDAwT09PT09PMDAwMDAwMCA9PSBbXQogICAgICAgICk6ICAjIGxpbmU6MTAzOmlmIGJpeiA9PSAiIiBvciBiaXogPT0gW106CiAgICAgICAgICAgIGlmICJfX2JpeiIgaW4gTzAwT08wT08wTzBPMDBPME86ICAjIGxpbmU6MTA0OmlmICJfX2JpeiIgaW4gbGluazoKICAgICAgICAgICAgICAgIE8wMDBPT09PT08wMDAwMDAwID0gcmUuZmluZGFsbCgKICAgICAgICAgICAgICAgICAgICAiX19iaXo9KC4qPykmIiwgTzAwT08wT08wTzBPMDBPME8KICAgICAgICAgICAgICAgICkgICMgbGluZToxMDU6Yml6ID0gcmUuZmluZGFsbCgiX19iaXo9KC4qPykmIiwgbGluaykKICAgICAgICAgICAgICAgIGlmIE8wMDBPT09PT08wMDAwMDAwICE9IFtdOiAgIyBsaW5lOjEwNjppZiBiaXogIT0gW106CiAgICAgICAgICAgICAgICAgICAgTzAwME9PT09PTzAwMDAwMDAgPSBPMDAwT09PT09PMDAwMDAwMFswXSAgIyBsaW5lOjEwNzpiaXogPSBiaXpbMF0KICAgICAgICBPT09PTzBPTzBPT08wT09PMCA9IHJlLmZpbmRhbGwoCiAgICAgICAgICAgICd2YXJuaWNrbmFtZT1odG1sRGVjb2RlXCgiKC4qPykiXCk7JywgT08wMDAwMDAwT09PT09PME8KICAgICAgICApICAjIGxpbmU6MTA4Om5pY2tuYW1lID0gcmUuZmluZGFsbCgndmFybmlja25hbWU9aHRtbERlY29kZVwoIiguKj8pIlwpOycsIGh0bWwpCiAgICAgICAgaWYgT09PT08wT08wT09PME9PTzAgIT0gW106ICAjIGxpbmU6MTA5OmlmIG5pY2tuYW1lICE9IFtdOgogICAgICAgICAgICBPT09PTzBPTzBPT08wT09PMCA9IE9PT09PME9PME9PTzBPT08wWzBdICAjIGxpbmU6MTEwOm5pY2tuYW1lID0gbmlja25hbWVbMF0KICAgICAgICBPT08wTzAwT09PT08wME9PTyA9IHJlLmZpbmRhbGwoCiAgICAgICAgICAgICd2YXJ1c2VyX25hbWU9IiguKj8pIjsnLCBPTzAwMDAwMDBPT09PT08wTwogICAgICAgICkgICMgbGluZToxMTE6dXNlcl9uYW1lID0gcmUuZmluZGFsbCgndmFydXNlcl9uYW1lPSIoLio/KSI7JywgaHRtbCkKICAgICAgICBpZiBPT08wTzAwT09PT08wME9PTyAhPSBbXTogICMgbGluZToxMTI6aWYgdXNlcl9uYW1lICE9IFtdOgogICAgICAgICAgICBPT08wTzAwT09PT08wME9PTyA9IE9PTzBPMDBPT09PTzAwT09PWwogICAgICAgICAgICAgICAgMAogICAgICAgICAgICBdICAjIGxpbmU6MTEzOnVzZXJfbmFtZSA9IHVzZXJfbmFtZVswXQogICAgICAgIE9PT08wT08wME8wTzAwT09PID0gcmUuZmluZGFsbCgKICAgICAgICAgICAgInZhcm1zZ190aXRsZT0nKC4qPyknXC5odG1sXCgiLCBPTzAwMDAwMDBPT09PT08wTwogICAgICAgICkgICMgbGluZToxMTQ6bXNnX3RpdGxlID0gcmUuZmluZGFsbCgidmFybXNnX3RpdGxlPScoLio/KSdcLmh0bWxcKCIsIGh0bWwpCiAgICAgICAgaWYgT09PTzBPTzAwTzBPMDBPT08gIT0gW106ICAjIGxpbmU6MTE1OmlmIG1zZ190aXRsZSAhPSBbXToKICAgICAgICAgICAgT09PTzBPTzAwTzBPMDBPT08gPSBPT09PME9PMDBPME8wME9PT1sKICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgXSAgIyBsaW5lOjExNjptc2dfdGl0bGUgPSBtc2dfdGl0bGVbMF0KICAgICAgICBPT09PMDBPMDBPME8wT08wTyA9IGYi5YWs5LyX5Y+35ZSv5LiA5qCH6K+G77yae08wMDBPT09PT08wMDAwMDAwfXzmlofnq6A6e09PT08wT08wME8wTzAwT09PfXzkvZzogIU6e09PT09PME9PME9PTzBPT08wfXzotKblj7c6e09PTzBPMDBPT09PTzAwT09PfSIgICMgbGluZToxMTc6dGV4dCA9IGYi5YWs5LyX5Y+35ZSv5LiA5qCH6K+G77yae2Jpen185paH56ugOnttc2dfdGl0bGV9fOS9nOiAhTp7bmlja25hbWV9fOi0puWPtzp7dXNlcl9uYW1lfSIKICAgICAgICBwcmludChPT09PMDBPMDBPME8wT08wTykgICMgbGluZToxMTg6cHJpbnQodGV4dCkKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICBPT09PTzBPTzBPT08wT09PMCwKICAgICAgICAgICAgT09PME8wME9PT09PMDBPT08sCiAgICAgICAgICAgIE9PT08wT08wME8wTzAwT09PLAogICAgICAgICAgICBPT09PMDBPMDBPME8wT08wTywKICAgICAgICAgICAgTzAwME9PT09PTzAwMDAwMDAsCiAgICAgICAgKSAgIyBsaW5lOjExOTpyZXR1cm4gbmlja25hbWUsIHVzZXJfbmFtZSwgbXNnX3RpdGxlLCB0ZXh0LCBiaXoKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgT09PT08wMDAwMDBPME8wTzA6ICAjIGxpbmU6MTIwOmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludCgi4p2MIOaPkOWPluaWh+eroOS/oeaBr+Wksei0pSIpICAjIGxpbmU6MTIyOnByaW50KCLinYwg5o+Q5Y+W5paH56ug5L+h5oGv5aSx6LSlIikKICAgICAgICByZXR1cm4gRmFsc2UgICMgbGluZToxMjM6cmV0dXJuIEZhbHNlCgoKZGVmIHRzKCk6ICAjIGxpbmU6MTI2OmRlZiB0cygpOgogICAgcmV0dXJuICgKICAgICAgICBzdHIoaW50KHRpbWUudGltZSgpKSkgKyAiMDAwIgogICAgKSAgIyBsaW5lOjEyNzpyZXR1cm4gc3RyKGludCh0aW1lLnRpbWUoKSkpICsgIjAwMCIKCgpjaGVja0RpY3QgPSB7CiAgICAiTXpreE5URTNNelE0TVE9PSI6IFsi6aaZ5aeQ54ix5peF6KGMIiwgImdoXzU0YTY1ZGM2MDAzOSJdLAogICAgIk16ZzVNak0wTURFd053PT0iOiBbIuaIkeacrOmdnuWHoSIsICJnaF80NmIwNzY5MDM0NzMiXSwKICAgICJNelV6T0RZNE56RTJPUT09IjogWyLlpJrogonokaHokIQyMDIwIiwgImdoX2IzZDc5Y2QxZTFiNSJdLAogICAgIk16a3lNakUzTXpZeE1nPT0iOiBbIllvdWhmdWwiLCAiZ2hfYjNkNzljZDFlMWI1Il0sCiAgICAiTXpreE5qTXdOREl6T0E9PSI6IFsi5bCR5bm05rKh5pyJ5LmM5omY6YKmMyIsICJnaF9iM2Q3OWNkMWUxYjUiXSwKICAgICJNemczTnpVeE1qYzVNZz09IjogWyLmmJ/mmJ/or7roqIAiLCAiZ2hfYjNkNzljZDFlMWI1Il0sCiAgICAiTXpnNE5UY3dPREUxTkE9PSI6IFsi5paR6ams6L+Y5rKh552hMTIzIiwgImdoX2IzZDc5Y2QxZTFiNSJdLAogICAgIk16azBPREl4T0RFNE9RPT0iOiBbIuaMgeWutuWmmeaLm+WuneWFuCIsICJnaF9iM2Q3OWNkMWUxYjUiXSwKICAgICJNemcyTmpVeU1qSTFOQT09IjogWyJMaWxpbm5nIiwgImdoX2IzZDc5Y2QxZTFiNSJdLAogICAgIk16SXpNRGN6T0RnNE13PT0iOiBbIuacieaVheS6i+eahOWQjOWtplkiLCAiZ2hfYjNkNzljZDFlMWI1Il0sCiAgICAiTXpnNU9EVXlNell6TVE9PSI6IFsiNzg55Lmf5LiN6KGMIiwgImdoX2IzZDc5Y2QxZTFiNSJdLAogICAgIk16VTBOekk1TWpjNE9RPT0iOiBbIuearuibi+eYpuiCieeMqiIsICJnaF81OGQ3ZWU1OTNiODYiXSwKICAgICJNemc1TURneE9EQXpNZz09IjogWyLljJfljJflsI/liqnmiYsiLCAiZ2hfNThkN2VlNTkzYjg2Il0sCiAgICAiTXpJek1EY3pPRGc0TXc9PSI6IFsi5pyJ5pWF5LqL55qE5ZCM5a2mWSIsICJnaF9iOGI5MjkzNGRhNWYiXSwKICAgICJNemt4TkRVMU5ERXpOdz09IjogWyLlsI/pmIXpmIXmnI3liqEiLCAiZ2hfZTUwY2ZlZmVmOWU1Il0sCn0gICMgbGluZToxNDY6fQoKCmNsYXNzIEhIWUQ6ICAjIGxpbmU6MTQ5OmNsYXNzIEhIWUQ6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgT09PMDAwME9PT08wMDBPT08sIE9PME9PTzBPMDBPME9PTzBPCiAgICApOiAgIyBsaW5lOjE1MDpkZWYgX19pbml0X18oc2VsZiwgY2cpOgogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLnVuaW9uSWQgPSBPTzBPT08wTzAwTzBPT08wT1sKICAgICAgICAgICAgInVuaW9uSWQiCiAgICAgICAgXSAgIyBsaW5lOjE1MTpzZWxmLnVuaW9uSWQgPSBjZ1sidW5pb25JZCJdCiAgICAgICAgT09PMDAwME9PT08wMDBPT08ueXNtX3VpZCA9IE9PME9PTzBPMDBPME9PTzBPWwogICAgICAgICAgICAieXNtX3VpZCIKICAgICAgICBdICAjIGxpbmU6MTUyOnNlbGYueXNtX3VpZCA9IGNnWyJ5c21fdWlkIl0KICAgICAgICBPT08wMDAwT09PTzAwME9PTy50eGJ6ID0gT08wT09PME8wME8wT09PME9bCiAgICAgICAgICAgICJ0eGJ6IgogICAgICAgIF0gICMgbGluZToxNTQ6c2VsZi50eGJ6ID0gY2dbInR4YnoiXQogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLnRvcGljSWRzID0gT08wT09PME8wME8wT09PME9bCiAgICAgICAgICAgICJ0b3BpY0lkcyIKICAgICAgICBdICAjIGxpbmU6MTU1OnNlbGYudG9waWNJZHMgPSBjZ1sidG9waWNJZHMiXQogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLmFwcFRva2VuID0gT08wT09PME8wME8wT09PME9bCiAgICAgICAgICAgICJhcHBUb2tlbiIKICAgICAgICBdICAjIGxpbmU6MTU2OnNlbGYuYXBwVG9rZW4gPSBjZ1siYXBwVG9rZW4iXQogICAgICAgIGdsb2JhbCB3ZWNoYXRCdXNzaW5lc3NLZXkgICMgbGluZToxNTc6Z2xvYmFsIHdlY2hhdEJ1c3NpbmVzc0tleQogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLndlY2hhdEJ1c3NpbmVzc0tleSA9ICgKICAgICAgICAgICAgd2VjaGF0QnVzc2luZXNzS2V5IG9yICIiCiAgICAgICAgKSAgIyBsaW5lOjE1ODpzZWxmLndlY2hhdEJ1c3NpbmVzc0tleSA9IHdlY2hhdEJ1c3NpbmVzc0tleSBvciAiIgogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLmFsaUFjY291bnQgPSAoCiAgICAgICAgICAgIE9PME9PTzBPMDBPME9PTzBPWyJhbGlBY2NvdW50Il0gb3IgIiIKICAgICAgICApICAjIGxpbmU6MTU5OnNlbGYuYWxpQWNjb3VudCA9IGNnWyJhbGlBY2NvdW50Il0gb3IgIiIKICAgICAgICBPT08wMDAwT09PTzAwME9PTy5hbGlOYW1lID0gKAogICAgICAgICAgICBPTzBPT08wTzAwTzBPT08wT1siYWxpTmFtZSJdIG9yICIiCiAgICAgICAgKSAgIyBsaW5lOjE2MDpzZWxmLmFsaU5hbWUgPSBjZ1siYWxpTmFtZSJdIG9yICIiCiAgICAgICAgT09PMDAwME9PT08wMDBPT08ubmFtZSA9IE9PME9PTzBPMDBPME9PTzBPWwogICAgICAgICAgICAibmFtZSIKICAgICAgICBdICAjIGxpbmU6MTYxOnNlbGYubmFtZSA9IGNnWyJuYW1lIl0KICAgICAgICBPT08wMDAwT09PTzAwME9PTy5kb21uYWluSG9zdCA9ICIxNjk4ODU1MTM5Lmh4aW9uZy50b3AiICAjIGxpbmU6MTYyOnNlbGYuZG9tbmFpbkhvc3QgPSAiMTY5ODg1NTEzOS5oeGlvbmcudG9wIgogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLmV4Y2hhbmdlUGFyYW1zID0gIiIgICMgbGluZToxNjM6c2VsZi5leGNoYW5nZVBhcmFtcyA9ICIiCiAgICAgICAgT09PMDAwME9PT08wMDBPT08uaGVhZGVycyA9IHsKICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMSIsCiAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwNjIxKSBYV0VCLzgzNTEgRmx1ZSIsCiAgICAgICAgICAgICJYLVJlcXVlc3RlZC1XaXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwKICAgICAgICAgICAgIlJlZmVyZXIiOiBmImh0dHA6Ly97T09PMDAwME9PT08wMDBPT08uZG9tbmFpbkhvc3R9LyIsCiAgICAgICAgICAgICJPcmlnaW4iOiBmImh0dHA6Ly97T09PMDAwME9PT08wMDBPT08uZG9tbmFpbkhvc3R9IiwKICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwKICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aCIsCiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiwKICAgICAgICAgICAgIkNvb2tpZSI6IGYieXNtX3VpZD17T09PMDAwME9PT08wMDBPT08ueXNtX3VpZH07IiwKICAgICAgICB9ICAjIGxpbmU6MTc2On0KICAgICAgICBPT08wMDAwT09PTzAwME9PTy5zZWMgPSAoCiAgICAgICAgICAgIHJlcXVlc3RzLnNlc3Npb24oKQogICAgICAgICkgICMgbGluZToxNzc6c2VsZi5zZWMgPSByZXF1ZXN0cy5zZXNzaW9uKCkKICAgICAgICBPT08wMDAwT09PTzAwME9PTy5zZWMudmVyaWZ5ID0gRmFsc2UgICMgbGluZToxNzg6c2VsZi5zZWMudmVyaWZ5ID0gRmFsc2UKICAgICAgICBPT08wMDAwT09PTzAwME9PTy5zZWMuaGVhZGVycyA9ICgKICAgICAgICAgICAgT09PMDAwME9PT08wMDBPT08uaGVhZGVycwogICAgICAgICkgICMgbGluZToxNzk6c2VsZi5zZWMuaGVhZGVycyA9IHNlbGYuaGVhZGVycwogICAgICAgIE9PTzAwMDBPT09PMDAwT09PLmxhc3RiaXogPSAiIiAgIyBsaW5lOjE4MDpzZWxmLmxhc3RiaXogPSAiIgoKICAgIGRlZiB1c2VyX2luZm8oT09PMDBPTzBPT09PME9PTzApOiAgIyBsaW5lOjE4MjpkZWYgdXNlcl9pbmZvKHNlbGYpOgogICAgICAgIE9PT09PMDBPMDAwTzBPME8wID0gZiJodHRwOi8ve09PTzAwT08wT09PTzBPT08wLmRvbW5haW5Ib3N0fS95dW5vbmxpbmUvdjEvc2lnbl9pbmZvP3RpbWU9e3RzKCl9JnVuaW9uaWQ9e09PTzAwT08wT09PTzBPT08wLnVuaW9uSWR9IiAgIyBsaW5lOjE4Mzp1ID0gZiJodHRwOi8ve3NlbGYuZG9tbmFpbkhvc3R9L3l1bm9ubGluZS92MS9zaWduX2luZm8/dGltZT17dHMoKX0mdW5pb25pZD17c2VsZi51bmlvbklkfSIKICAgICAgICBPMDAwME9PME9PME8wME8wMCA9ICIiICAjIGxpbmU6MTg0OnIgPSAiIgogICAgICAgIHRyeTogICMgbGluZToxODU6dHJ5OgogICAgICAgICAgICBPMDAwME9PME9PME8wME8wMCA9IE9PTzAwT08wT09PTzBPT08wLnNlYy5nZXQoCiAgICAgICAgICAgICAgICBPT09PTzAwTzAwME8wTzBPMAogICAgICAgICAgICApICAjIGxpbmU6MTg2OnIgPSBzZWxmLnNlYy5nZXQodSkKICAgICAgICAgICAgTzBPTzAwT09PTzBPT08wT08gPSBPMDAwME9PME9PME8wME8wMC5qc29uKCkgICMgbGluZToxODc6cmogPSByLmpzb24oKQogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICBPME9PMDBPT09PME9PTzBPTy5nZXQoImVycmNvZGUiKSA9PSAwCiAgICAgICAgICAgICk6ICAjIGxpbmU6MTg4OmlmIHJqLmdldCgiZXJyY29kZSIpID09IDA6CiAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICBmIui0puWPt1t7T09PMDBPTzBPT09PME9PTzAubmFtZX1d6I635Y+W5L+h5oGv5oiQ5Yqf77yM5b2T5YmN6ZiF6K+75paH56ug5q+P56+H5aWW5YqxIHtPMDAwME9PME9PME8wME8wMC5qc29uKClbJ2RhdGEnXVsnYXdhcmQnXX3kuKrph5HluIEiCiAgICAgICAgICAgICAgICApICAjIGxpbmU6MTkxOikKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlICAjIGxpbmU6MTkyOnJldHVybiBUcnVlCiAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6MTkzOmVsc2U6CiAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICBmIui0puWPt1t7T09PMDBPTzBPT09PME9PTzAubmFtZX1d6I635Y+W55So5oi35L+h5oGv5aSx6LSl77yM6LSm5Y+35byC5bi4IOaIluiAhSB5c21fdWlk5peg5pWI77yM6K+35qOA5rWLeXNtX3VpZOaYr+WQpuato+ehriIKICAgICAgICAgICAgICAgICkgICMgbGluZToxOTQ6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1d6I635Y+W55So5oi35L+h5oGv5aSx6LSl77yM6LSm5Y+35byC5bi4IOaIluiAhSB5c21fdWlk5peg5pWI77yM6K+35qOA5rWLeXNtX3VpZOaYr+WQpuato+ehriIpCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UgICMgbGluZToxOTU6cmV0dXJuIEZhbHNlCiAgICAgICAgZXhjZXB0OiAgIyBsaW5lOjE5NjpleGNlcHQ6CiAgICAgICAgICAgIHByaW50KE8wMDAwT08wT08wTzAwTzAwLnRleHQpICAjIGxpbmU6MTk3OnByaW50KHIudGV4dCkKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7T09PMDBPTzBPT09PME9PTzAubmFtZX1d6I635Y+W55So5oi35L+h5oGv5aSx6LSlLHlzbV91aWTml6DmlYjvvIzor7fmo4DmtYt5c21fdWlk5piv5ZCm5q2j56GuIgogICAgICAgICAgICApICAjIGxpbmU6MTk4OnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeiOt+WPlueUqOaIt+S/oeaBr+Wksei0pSx5c21fdWlk5peg5pWI77yM6K+35qOA5rWLeXNtX3VpZOaYr+WQpuato+ehriIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjE5OTpyZXR1cm4gRmFsc2UKCiAgICBkZWYgaGFzV2VjaGF0KE9PME9PME8wME8wMDAwT08wKTogICMgbGluZToyMDE6ZGVmIGhhc1dlY2hhdChzZWxmKToKICAgICAgICBPME9PTzAwT08wT08wTzBPMCA9ICIiICAjIGxpbmU6MjAyOnIgPSAiIgogICAgICAgIHRyeTogICMgbGluZToyMDM6dHJ5OgogICAgICAgICAgICBPTzBPME9PTzAwMDBPTzAwTyA9IGYiaHR0cDovL3tPTzBPTzBPMDBPMDAwME9PMC5kb21uYWluSG9zdH0veXVub25saW5lL3YxL2hhc1dlY2hhdD91bmlvbmlkPXtPTzBPTzBPMDBPMDAwME9PMC51bmlvbklkfSIgICMgbGluZToyMDQ6dSA9IGYiaHR0cDovL3tzZWxmLmRvbW5haW5Ib3N0fS95dW5vbmxpbmUvdjEvaGFzV2VjaGF0P3VuaW9uaWQ9e3NlbGYudW5pb25JZH0iCiAgICAgICAgICAgIE8wT09PMDBPTzBPTzBPME8wID0gT08wT08wTzAwTzAwMDBPTzAuc2VjLmdldCgKICAgICAgICAgICAgICAgIE9PME8wT09PMDAwME9PMDBPCiAgICAgICAgICAgICkgICMgbGluZToyMDU6ciA9IHNlbGYuc2VjLmdldCh1KQogICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPTzBPTzBPMDBPMDAwME9PMC5uYW1lfV3liKTmlq3lhazkvJflj7fku7vliqHmlbDph4/vvJp7TzBPT08wME9PME9PME8wTzAuanNvbigpWydkYXRhJ11bJ2hhcyddfSIKICAgICAgICAgICAgKSAgIyBsaW5lOjIwNjpwcmludChmIui0puWPt1t7c2VsZi5uYW1lfV3liKTmlq3lhazkvJflj7fku7vliqHmlbDph4/vvJp7ci5qc29uKClbJ2RhdGEnXVsnaGFzJ119IikKICAgICAgICBleGNlcHQ6ICAjIGxpbmU6MjA3OmV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7T08wT08wTzAwTzAwMDBPTzAubmFtZX1d5Yik5pat5piv5ZCm5pyJ5YWs5LyX5Y+35Lu75Yqh5aSx6LSl77yae08wT09PMDBPTzBPTzBPME8wLnRleHR9IgogICAgICAgICAgICApICAjIGxpbmU6MjA4OnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeWIpOaWreaYr+WQpuacieWFrOS8l+WPt+S7u+WKoeWksei0pe+8mntyLnRleHR9IikKICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAjIGxpbmU6MjA5OnJldHVybiBGYWxzZQoKICAgIGRlZiBnb2xkKE9PTzBPME8wMDAwMDBPMDAwKTogICMgbGluZToyMTE6ZGVmIGdvbGQoc2VsZik6CiAgICAgICAgT09PT09PT08wTzBPME8wME8gPSAiIiAgIyBsaW5lOjIxMjpyID0gIiIKICAgICAgICB0cnk6ICAjIGxpbmU6MjEzOnRyeToKICAgICAgICAgICAgTzBPTzAwT09PTzBPTzBPT08gPSBmImh0dHA6Ly97T09PME8wTzAwMDAwME8wMDAuZG9tbmFpbkhvc3R9L3l1bm9ubGluZS92MS9nb2xkP3VuaW9uaWQ9e09PTzBPME8wMDAwMDBPMDAwLnVuaW9uSWR9JnRpbWU9e3RzKCl9IiAgIyBsaW5lOjIxNDp1ID0gZiJodHRwOi8ve3NlbGYuZG9tbmFpbkhvc3R9L3l1bm9ubGluZS92MS9nb2xkP3VuaW9uaWQ9e3NlbGYudW5pb25JZH0mdGltZT17dHMoKX0iCiAgICAgICAgICAgIE9PT09PT09PME8wTzBPMDBPID0gT09PME8wTzAwMDAwME8wMDAuc2VjLmdldCgKICAgICAgICAgICAgICAgIE8wT08wME9PT08wT08wT09PCiAgICAgICAgICAgICkgICMgbGluZToyMTU6ciA9IHNlbGYuc2VjLmdldCh1KQogICAgICAgICAgICBPMDAwT08wME9PME9PT08wMCA9IE9PT09PT09PME8wTzBPMDBPLmpzb24oKSAgIyBsaW5lOjIxNzpyaiA9IHIuanNvbigpCiAgICAgICAgICAgIE9PTzBPME8wMDAwMDBPMDAwLnJlbWFpbiA9IG1hdGguZmxvb3IoCiAgICAgICAgICAgICAgICBpbnQoTzAwME9PMDBPTzBPT09PMDAuZ2V0KCJkYXRhIikuZ2V0KCJsYXN0X2dvbGQiKSkKICAgICAgICAgICAgKSAgIyBsaW5lOjIxODpzZWxmLnJlbWFpbiA9IG1hdGguZmxvb3IoaW50KHJqLmdldCgiZGF0YSIpLmdldCgibGFzdF9nb2xkIikpKQogICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgIGYn5LuK5pel5bey57uP6ZiF6K+75LqGe08wMDBPTzAwT08wT09PTzAwLmdldCgiZGF0YSIpLmdldCgiZGF5X3JlYWQiKX3nr4fmlofnq6As5Ymp5L2Ze08wMDBPTzAwT08wT09PTzAwLmdldCgiZGF0YSIpLmdldCgicmVtYWluX3JlYWQiKX3mnKrpmIXor7vvvIzku4rml6Xojrflj5bph5HluIF7TzAwME9PMDBPTzBPT09PMDAuZ2V0KCJkYXRhIikuZ2V0KCJkYXlfZ29sZCIpfe+8jOWJqeS9mXtPT08wTzBPMDAwMDAwTzAwMC5yZW1haW59JwogICAgICAgICAgICApICAjIGxpbmU6MjIxOikKICAgICAgICBleGNlcHQ6ICAjIGxpbmU6MjIyOmV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7T09PME8wTzAwMDAwME8wMDAubmFtZX1d6I635Y+W6YeR5biB5aSx6LSlIgogICAgICAgICAgICApICAjIGxpbmU6MjIzOnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeiOt+WPlumHkeW4geWksei0pSIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjIyNDpyZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0S2V5KE8wMDAwT09PTzBPT09PTzBPKTogICMgbGluZToyMjY6ZGVmIGdldEtleShzZWxmKToKICAgICAgICBPMDBPMDBPT08wMDBPMDBPMCA9ICIiICAjIGxpbmU6MjI3OnVrID0gIiIKICAgICAgICBPT08wME9PTzAwMDAwT09PTyA9IE5vbmUgICMgbGluZToyMjg6dWtSZXMgPSBOb25lCiAgICAgICAgZm9yIE8wMDBPME9PTzAwT09PME8wIGluIHJhbmdlKDEwKTogICMgbGluZToyMjk6Zm9yIGkgaW4gcmFuZ2UoMTApOgogICAgICAgICAgICBPT09PME8wMDBPTzBPT08wTyA9IGYiaHR0cDovL3tPMDAwME9PT08wT09PT08wTy5kb21uYWluSG9zdH0veXVub25saW5lL3YxL3d0bXBkb21haW4iICAjIGxpbmU6MjMwOnUgPSBmImh0dHA6Ly97c2VsZi5kb21uYWluSG9zdH0veXVub25saW5lL3YxL3d0bXBkb21haW4iCiAgICAgICAgICAgIE9PMDBPT09PMDBPTzAwME8wID0gZiJ1bmlvbmlkPXtPMDAwME9PT08wT09PT08wTy51bmlvbklkfSIgICMgbGluZToyMzI6cCA9IGYidW5pb25pZD17c2VsZi51bmlvbklkfSIKICAgICAgICAgICAgT09PME8wME9PMDBPTzAwMDAgPSByZXF1ZXN0cy5wb3N0KAogICAgICAgICAgICAgICAgT09PTzBPMDAwT08wT09PME8sCiAgICAgICAgICAgICAgICBoZWFkZXJzPU8wMDAwT09PTzBPT09PTzBPLmhlYWRlcnMsCiAgICAgICAgICAgICAgICBkYXRhPU9PMDBPT09PMDBPTzAwME8wLAogICAgICAgICAgICAgICAgdmVyaWZ5PUZhbHNlLAogICAgICAgICAgICApICAjIGxpbmU6MjMzOnIgPSByZXF1ZXN0cy5wb3N0KHUsIGhlYWRlcnM9c2VsZi5oZWFkZXJzLCBkYXRhPXAsIHZlcmlmeT1GYWxzZSkKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAiZ2V0S2V577yaIiwgT09PME8wME9PMDBPTzAwMDAudGV4dAogICAgICAgICAgICApICAjIGxpbmU6MjM0OnByaW50KCJnZXRLZXnvvJoiLCByLnRleHQpCiAgICAgICAgICAgIE8wT08wT08wMDAwTzAwT08wID0gT09PME8wME9PMDBPTzAwMDAuanNvbigpICAjIGxpbmU6MjM1OnJqID0gci5qc29uKCkKICAgICAgICAgICAgT08wME8wT09PME8wMDBPT08gPSBPME9PME9PMDAwME8wME9PMC5nZXQoImRhdGEiKS5nZXQoCiAgICAgICAgICAgICAgICAiZG9tYWluIgogICAgICAgICAgICApICAjIGxpbmU6MjM2OmRvbWFpbiA9IHJqLmdldCgiZGF0YSIpLmdldCgiZG9tYWluIikKICAgICAgICAgICAgT08wTzAwMDAwME8wT08wMDAgPSBwYXJzZV9xcygKICAgICAgICAgICAgICAgIHVybHBhcnNlKE9PMDBPME9PTzBPMDAwT09PKS5xdWVyeQogICAgICAgICAgICApICAjIGxpbmU6MjM4OnBwID0gcGFyc2VfcXModXJscGFyc2UoZG9tYWluKS5xdWVyeSkKICAgICAgICAgICAgTzAwTzAwTzBPT08wTzBPME8gPSB1cmxwYXJzZSgKICAgICAgICAgICAgICAgIE9PMDBPME9PTzBPMDAwT09PCiAgICAgICAgICAgICkubmV0bG9jICAjIGxpbmU6MjM5OmhuID0gdXJscGFyc2UoZG9tYWluKS5uZXRsb2MKICAgICAgICAgICAgTzAwTzAwT09PMDAwTzAwTzAgPSBPTzBPMDAwMDAwTzBPTzAwMC5nZXQoInVrIilbCiAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgIF0gICMgbGluZToyNDA6dWsgPSBwcC5nZXQoInVrIilbMF0KICAgICAgICAgICAgT09PMDBPT08wMDAwME9PT08gPSBPT08wTzAwT08wME9PMDAwMC50ZXh0ICAjIGxpbmU6MjQxOnVrUmVzID0gci50ZXh0CiAgICAgICAgICAgIGlmIE8wME8wME9PTzAwME8wME8wOiAgIyBsaW5lOjI0MjppZiB1azoKICAgICAgICAgICAgICAgIGJyZWFrICAjIGxpbmU6MjQzOmJyZWFrCiAgICAgICAgaWYgTzAwTzAwT09PMDAwTzAwTzAgPT0gIiI6ICAjIGxpbmU6MjQ0OmlmIHVrID09ICIiOgogICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPMDAwME9PT08wT09PT08wTy5uYW1lfV3ojrflj5Z1a+Wksei0pe+8jOi/lOWbnumUmeivr++8mntPT08wME9PTzAwMDAwT09PT30iCiAgICAgICAgICAgICkgICMgbGluZToyNDU6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1d6I635Y+WdWvlpLHotKXvvIzov5Tlm57plJnor6/vvJp7dWtSZXN9IikKICAgICAgICAgICAgcmV0dXJuICAjIGxpbmU6MjQ2OnJldHVybgogICAgICAgIHRpbWUuc2xlZXAoOCkgICMgbGluZToyNDc6dGltZS5zbGVlcCg4KQogICAgICAgIE9PTzBPMDBPTzAwT08wMDAwID0gcmVxdWVzdHMuZ2V0KAogICAgICAgICAgICBPTzAwTzBPT08wTzAwME9PTywKICAgICAgICAgICAgaGVhZGVycz17CiAgICAgICAgICAgICAgICAiQWNjZXB0IjogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICAgICAgICAgICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiemgtQ04semg7cT0wLjkiLAogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICAgICAiSG9zdCI6IGYie08wME8wME8wT09PME8wTzBPfSIsCiAgICAgICAgICAgICAgICAiU2VjLUZldGNoLURlc3QiOiAiZG9jdW1lbnQiLAogICAgICAgICAgICAgICAgIlNlYy1GZXRjaC1Nb2RlIjogIm5hdmlnYXRlIiwKICAgICAgICAgICAgICAgICJTZWMtRmV0Y2gtU2l0ZSI6ICJub25lIiwKICAgICAgICAgICAgICAgICJTZWMtRmV0Y2gtVXNlciI6ICI/MSIsCiAgICAgICAgICAgICAgICAiVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0cyI6ICIxIiwKICAgICAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwNzFkKSBYV0VCLzg0NjEgRmx1ZSIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHZlcmlmeT1GYWxzZSwKICAgICAgICApICAjIGxpbmU6MjY0OikKICAgICAgICBwcmludCgKICAgICAgICAgICAgZiLotKblj7dbe08wMDAwT09PTzBPT09PTzBPLm5hbWV9XSDpmIXor7vlh4blpIfmiJDlip8g5Y2z5bCG5byA5aeL6ZiF6K+7IOKchSDvvIzpmIXor7vlj4LmlbDkuLrvvJp7TzAwTzAwT09PMDAwTzAwTzB9IgogICAgICAgICkgICMgbGluZToyNjY6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1dIOmYheivu+WHhuWkh+aIkOWKnyDljbPlsIblvIDlp4vpmIXor7sg4pyFIO+8jOmYheivu+WPguaVsOS4uu+8mnt1a30iKQogICAgICAgIE9PT08wMDBPTzAwTzAwTzBPID0gewogICAgICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiLAogICAgICAgICAgICAiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aDtxPTAuOSIsCiAgICAgICAgICAgICJDb25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAogICAgICAgICAgICAiSG9zdCI6ICJuc3IuenNmMjAyM2U0NTguY2xvdWQiLAogICAgICAgICAgICAiT3JpZ2luIjogZiJodHRwczovL3tPMDBPMDBPME9PTzBPME8wT30iLAogICAgICAgICAgICAiU2VjLUZldGNoLURlc3QiOiAiZW1wdHkiLAogICAgICAgICAgICAiU2VjLUZldGNoLU1vZGUiOiAiY29ycyIsCiAgICAgICAgICAgICJTZWMtRmV0Y2gtU2l0ZSI6ICJjcm9zcy1zaXRlIiwKICAgICAgICAgICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwNy4wLjAuMCBTYWZhcmkvNTM3LjM2IE5ldFR5cGUvV0lGSSBNaWNyb01lc3Nlbmdlci83LjAuMjAuMTc4MSgweDY3MDAxNDNCKSBXaW5kb3dzV2VjaGF0KDB4NjMwOTA3MWQpIFhXRUIvODQ2MSBGbHVlIiwKICAgICAgICB9ICAjIGxpbmU6Mjc4On0KICAgICAgICByZXR1cm4gTzAwTzAwT09PMDAwTzAwTzAsIE9PT08wMDBPTzAwTzAwTzBPICAjIGxpbmU6Mjc5OnJldHVybiB1aywgaAoKICAgIGRlZiByZWFkKE9PTzAwTzBPTzBPTzAwME9PKTogICMgbGluZToyODE6ZGVmIHJlYWQoc2VsZik6CiAgICAgICAgTzAwME8wT09PT08wMDBPTzAgPSBPT08wME8wT08wT08wMDBPTy5nZXRLZXkoKSAgIyBsaW5lOjI4MjppbmZvID0gc2VsZi5nZXRLZXkoKQogICAgICAgIGlmIGxlbihPMDAwTzBPT09PTzAwME9PMCkgPT0gMDogICMgbGluZToyODM6aWYgbGVuKGluZm8pID09IDA6CiAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XeiOt+WPlumYheivu+WPguaVsOWksei0pe+8jOWBnOatouW+gOWQjumYheivu++8geKaoO+4jyAiCiAgICAgICAgICAgICkgICMgbGluZToyODQ6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1d6I635Y+W6ZiF6K+75Y+C5pWw5aSx6LSl77yM5YGc5q2i5b6A5ZCO6ZiF6K+777yB4pqg77iPICIpCiAgICAgICAgICAgIHJldHVybiAgIyBsaW5lOjI4NTpyZXR1cm4KICAgICAgICB0aW1lLnNsZWVwKDIpICAjIGxpbmU6Mjg3OnRpbWUuc2xlZXAoMikKICAgICAgICBPTzBPTzAwME8wTzBPTzBPTyA9IDEgICMgbGluZToyODg6YXJjdGlsZVRpbWUgPSAxCiAgICAgICAgT09PT08wT09PTzAwMDAwME8gPSAiIiAgIyBsaW5lOjI4OTpsYXN0ZXN0QXJjdGljbGVJZCA9ICIiCiAgICAgICAgd2hpbGUgVHJ1ZTogICMgbGluZToyOTA6d2hpbGUgVHJ1ZToKICAgICAgICAgICAgTzBPT08wT09PME8wTzBPMDAgPSB7ImVycmNvZGUiOiAtMX0gICMgbGluZToyOTE6cmVzID0geyJlcnJjb2RlIjogLTF9CiAgICAgICAgICAgIE9PT09PMDBPME8wMDBPMDBPID0gMCAgIyBsaW5lOjI5MjpyZWZyZXNoVGltZSA9IDAKICAgICAgICAgICAgd2hpbGUgKAogICAgICAgICAgICAgICAgTzBPT08wT09PME8wTzBPMDBbImVycmNvZGUiXSAhPSAwCiAgICAgICAgICAgICk6ICAjIGxpbmU6MjkzOndoaWxlIHJlc1siZXJyY29kZSJdICE9IDA6CiAgICAgICAgICAgICAgICBPT09PTzBPME9PME9PMDAwTyA9IHN0cih0cygpKSAgIyBsaW5lOjI5NDp0aW1lU3RhbXAgPSBzdHIodHMoKSkKICAgICAgICAgICAgICAgIE9PTzAwT08wMDAwME9PME8wID0gaGFzaGxpYi5tZDUoCiAgICAgICAgICAgICAgICAgICAgKAogICAgICAgICAgICAgICAgICAgICAgICBPMDAwTzBPT09PTzAwME9PMFsxXVsiT3JpZ2luIl0ucmVwbGFjZSgiaHR0cHM6Ly8iLCAiIilbOjExXQogICAgICAgICAgICAgICAgICAgICAgICArIE8wMDBPME9PT09PMDAwT08wWzBdCiAgICAgICAgICAgICAgICAgICAgICAgICsgT09PT08wTzBPTzBPTzAwME8KICAgICAgICAgICAgICAgICAgICAgICAgKyAiQSZJMjVMSUxJWURTJCIKICAgICAgICAgICAgICAgICAgICApLmVuY29kZSgpCiAgICAgICAgICAgICAgICApLmhleGRpZ2VzdCgpICAjIGxpbmU6MzAyOikuaGV4ZGlnZXN0KCkKICAgICAgICAgICAgICAgIE9PTzAwTzBPTzBPTzAwME9PLnBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgICAidWsiOiBPMDAwTzBPT09PTzAwME9PMFswXSwKICAgICAgICAgICAgICAgICAgICAidGltZSI6IE9PT09PME8wT08wT08wMDBPLAogICAgICAgICAgICAgICAgICAgICJwc2duIjogT09PMDBPTzAwMDAwT08wTzAsCiAgICAgICAgICAgICAgICAgICAgInYiOiAiMy4wIiwKICAgICAgICAgICAgICAgIH0gICMgbGluZTozMDg6fQogICAgICAgICAgICAgICAgT09PME8wT09PTzBPME9PTzAgPSBmImh0dHBzOi8vbnNyLnpzZjIwMjNlNDU4LmNsb3VkL3l1bm9ubGluZS92MS9kb19yZWFkIiAgIyBsaW5lOjMwOTp1ID0gZiJodHRwczovL25zci56c2YyMDIzZTQ1OC5jbG91ZC95dW5vbmxpbmUvdjEvZG9fcmVhZCIKICAgICAgICAgICAgICAgIE8wTzBPT08wT08wTzBPMDBPID0gcmVxdWVzdHMuZ2V0KAogICAgICAgICAgICAgICAgICAgIE9PTzBPME9PT08wTzBPT08wLAogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM9TzAwME8wT09PT08wMDBPTzBbMV0sCiAgICAgICAgICAgICAgICAgICAgcGFyYW1zPU9PTzAwTzBPTzBPTzAwME9PLnBhcmFtcywKICAgICAgICAgICAgICAgICAgICB2ZXJpZnk9RmFsc2UsCiAgICAgICAgICAgICAgICAgICAgdGltZW91dD02MCwKICAgICAgICAgICAgICAgICkgICMgbGluZTozMTI6KQogICAgICAgICAgICAgICAgcHJpbnQoIi0iICogNTApICAjIGxpbmU6MzEzOnByaW50KCItIiAqIDUwKQogICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgIE8wTzBPT08wT08wTzBPMDBPLnRleHQgYW5kIE8wTzBPT08wT08wTzBPMDBPLmpzb24oKVsiZXJyY29kZSJdID09IDAKICAgICAgICAgICAgICAgICk6ICAjIGxpbmU6MzE4OmlmIHIudGV4dCBhbmQgci5qc29uKClbImVycmNvZGUiXSA9PSAwOgogICAgICAgICAgICAgICAgICAgIE8wT09PME9PTzBPME8wTzAwID0gKAogICAgICAgICAgICAgICAgICAgICAgICBPME8wT09PME9PME8wTzAwTy5qc29uKCkKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzE5OnJlcyA9IHIuanNvbigpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3nrKxbe09PT09PMDBPME8wMDBPMDBPKzF9XeasoeiOt+WPluesrFt7T08wT08wMDBPME8wT08wT099Xeevh+mYheivu+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19Xei3s+i9rOmTvuaOpeaIkOWKnyIKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzIyOikKICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6MzIzOmVsc2U6CiAgICAgICAgICAgICAgICAgICAgT08wME9PMDBPTzAwTzBPMDAgPSBqc29uLmxvYWRzKAogICAgICAgICAgICAgICAgICAgICAgICBPME8wT09PME9PME8wTzAwTy50ZXh0CiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjMyNDpkZWNvZGVkX3N0ciA9IGpzb24ubG9hZHMoci50ZXh0KQogICAgICAgICAgICAgICAgICAgIGlmIE9PMDBPTzAwT08wME8wTzAwWyJtc2ciXTogICMgbGluZTozMjU6aWYgZGVjb2RlZF9zdHJbIm1zZyJdOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3nrKxbe09PT09PMDBPME8wMDBPMDBPKzF9XeasoeiOt+WPluesrFt7T08wT08wMDBPME8wT08wT099Xeevh+mYheivu+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19Xei3s+i9rOmTvuaOpeWksei0pe+8mntPTzAwT08wME9PMDBPME8wMFsnbXNnJ119IgogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzI4OikKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAjIGxpbmU6MzI5OnJldHVybiBGYWxzZQogICAgICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6MzMwOmVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XeesrFt7T09PT08wME8wTzAwME8wME8rMX1d5qyh6I635Y+W56ysW3tPTzBPTzAwME8wTzBPTzBPT31d56+H6ZiF6K+75paH56ugW3tPMDAwTzBPT09PTzAwME9PMFswXX1d6Lez6L2s6ZO+5o6l5aSx6LSl77yae08wTzBPT08wT08wTzBPMDBPLnRleHR9IgogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzMzOikKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMS41KSAgIyBsaW5lOjMzNDp0aW1lLnNsZWVwKDEuNSkKICAgICAgICAgICAgICAgIE9PT09PMDBPME8wMDBPMDBPID0gKAogICAgICAgICAgICAgICAgICAgIE9PT09PMDBPME8wMDBPMDBPICsgMQogICAgICAgICAgICAgICAgKSAgIyBsaW5lOjMzNTpyZWZyZXNoVGltZSA9IHJlZnJlc2hUaW1lICsgMQogICAgICAgICAgICAgICAgaWYgT09PT08wME8wTzAwME8wME8gPj0gNTogICMgbGluZTozMzY6aWYgcmVmcmVzaFRpbWUgPj0gNToKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLimqDvuI8g6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3ojrflj5bpmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6Bbe08wMDBPME9PT09PMDAwT08wWzBdfV3otoXml7bigKbigKYiCiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjMzNzpwcmludChmIuKaoO+4jyDotKblj7dbe3NlbGYubmFtZX1d6I635Y+W6ZiF6K+756ysW3thcmN0aWxlVGltZX1d56+H5paH56ugW3tpbmZvWzBdfV3otoXml7bigKbigKYiKQogICAgICAgICAgICAgICAgICAgIHJldHVybiAgIyBsaW5lOjMzODpyZXR1cm4KICAgICAgICAgICAgTzAwTzAwTzBPTzBPMDBPT08gPSAiIiAgIyBsaW5lOjMzOTp3ZWNoYXRQb3N0TGluayA9ICIiCiAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgIE8wT09PME9PTzBPME8wTzAwLmdldCgiZXJyY29kZSIpID09IDAKICAgICAgICAgICAgKTogICMgbGluZTozNDA6aWYgcmVzLmdldCgiZXJyY29kZSIpID09IDA6CiAgICAgICAgICAgICAgICBPMDBPME8wTzAwME9PME9PTyA9ICIiICAjIGxpbmU6MzQxOnJldHVybkxpbmsgPSAiIgogICAgICAgICAgICAgICAgdHJ5OiAgIyBsaW5lOjM0Mjp0cnk6CiAgICAgICAgICAgICAgICAgICAgTzAwTzBPME8wMDBPTzBPT08gPSBPME9PTzBPT08wTzBPME8wMC5nZXQoImRhdGEiKS5nZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICJsaW5rIgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTozNDM6cmV0dXJuTGluayA9IHJlcy5nZXQoImRhdGEiKS5nZXQoImxpbmsiKQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBPT09PME8wMDBPME9PME8wTzogICMgbGluZTozNDQ6ZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICBmIuKaoO+4jyDotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XeiOt+WPlumYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XemTvuaOpeWksei0pe+8jOeWkeS8vOWPsOWtkOaOpeWPo+WkquWeg+Wcvu+8jOW0qeS6hu+8jOi/lOWbnuaVsOaNruS4uu+8miIsCiAgICAgICAgICAgICAgICAgICAgICAgIE8wT09PME9PTzBPME8wTzAwLmdldCgiZGF0YSIpLAogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTozNDg6KQogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlICAjIGxpbmU6MzQ5OmNvbnRpbnVlCiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgIm1wLndlaXhpbi5xcS5jb20iIGluIE8wME8wTzBPMDAwT08wT09PCiAgICAgICAgICAgICAgICApOiAgIyBsaW5lOjM1MDppZiAibXAud2VpeGluLnFxLmNvbSIgaW4gcmV0dXJuTGluazoKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XSDpmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4flvq7kv6Hmlofnq6DvvJp7TzAwTzBPME8wMDBPTzBPT099IgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTozNTE6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1dIOmYheivu+esrFt7YXJjdGlsZVRpbWV9Xeevh+W+ruS/oeaWh+eroO+8mntyZXR1cm5MaW5rfSIpCiAgICAgICAgICAgICAgICAgICAgTzAwTzAwTzBPTzBPMDBPT08gPSAoCiAgICAgICAgICAgICAgICAgICAgICAgIE8wME8wTzBPMDAwT08wT09PICAjIGxpbmU6MzUyOndlY2hhdFBvc3RMaW5rID0gcmV0dXJuTGluawogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6MzUzOmVsc2U6CiAgICAgICAgICAgICAgICAgICAgTzAwTzAwTzBPTzBPMDBPT08gPSBPT08wME8wT08wT08wMDBPTy5qdW1wKAogICAgICAgICAgICAgICAgICAgICAgICBPMDBPME8wTzAwME9PME9PTwogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTozNTU6d2VjaGF0UG9zdExpbmsgPSBzZWxmLmp1bXAocmV0dXJuTGluaykKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XSDpmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4flvq7kv6Hmlofnq6DvvJp7TzAwTzAwTzBPTzBPMDBPT099IgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTozNTY6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1dIOmYheivu+esrFt7YXJjdGlsZVRpbWV9Xeevh+W+ruS/oeaWh+eroO+8mnt3ZWNoYXRQb3N0TGlua30iKQogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XSDpmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6DvvJp7TzAwTzAwTzBPTzBPMDBPT099IgogICAgICAgICAgICAgICAgKSAgIyBsaW5lOjM1NzpwcmludChmIui0puWPt1t7c2VsZi5uYW1lfV0g6ZiF6K+756ysW3thcmN0aWxlVGltZX1d56+H5paH56ug77yae3dlY2hhdFBvc3RMaW5rfSIpCiAgICAgICAgICAgICAgICBPT09PTzBPME8wME9PMDBPMCA9IGdldGluZm8oCiAgICAgICAgICAgICAgICAgICAgTzAwTzAwTzBPTzBPMDBPT08KICAgICAgICAgICAgICAgICkgICMgbGluZTozNTg6YSA9IGdldGluZm8od2VjaGF0UG9zdExpbmspCiAgICAgICAgICAgICAgICBpZiBPT09PTzBPME8wME9PMDBPMCA9PSBGYWxzZTogICMgbGluZTozNTk6aWYgYSA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLimqDvuI8g6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3lm6Ag6I635Y+W5YWs5LyX5Y+35paH56ug5L+h5oGv5LiN5oiQ5Yqf77yM5a+86Ie06ZiF6K+756ysW3tPTzBPTzAwME8wTzBPTzBPT31d56+H5paH56ugW3tPMDAwTzBPT09PTzAwME9PMFswXX1dIOWksei0peKApuKApiIKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzYyOikKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UgICMgbGluZTozNjM6cmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICBPMDAwTzAwME8wT08wT09PTyA9IHJhbmRvbS5yYW5kaW50KAogICAgICAgICAgICAgICAgICAgIDcsIDEwCiAgICAgICAgICAgICAgICApICAjIGxpbmU6MzY0OnNsZWVwVGltZSA9IHJhbmRvbS5yYW5kaW50KDcsIDEwKQogICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgIGNoZWNrRGljdC5nZXQoT09PT08wTzBPMDBPTzAwTzBbNF0pICE9IE5vbmUKICAgICAgICAgICAgICAgICAgICBvciAoTzBPT08wT09PME8wTzBPMDAuZ2V0KCJkYXRhIikuZ2V0KCJhIikgPT0gMikKICAgICAgICAgICAgICAgICAgICBvciAoIiZjaGtzbT0iIGluIE8wME8wME8wT08wTzAwT09PKQogICAgICAgICAgICAgICAgKTogICMgbGluZTozNzA6KToKICAgICAgICAgICAgICAgICAgICBPMDAwTzAwME8wT08wT09PTyA9IHJhbmRvbS5yYW5kaW50KAogICAgICAgICAgICAgICAgICAgICAgICAxNSwgMjAKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6MzcxOnNsZWVwVGltZSA9IHJhbmRvbS5yYW5kaW50KDE1LCAyMCkKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLimqDvuI8g6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3pmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6Bbe08wMDBPME9PT09PMDAwT08wWzBdfV0g5qOA5rWL5Yiw55aR5Ly85qOA5rWL5paH56ug77yM5q2j5Zyo5o6o6YCB77yM562J5b6F6L+H5qOA5rWL77yM562J5b6F5pe26Ze077yae08wMDBPMDAwTzBPTzBPT09PfeenkuOAguOAguOAgiIKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6Mzc0OikKICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgIE9PTzAwTzBPTzBPTzAwME9PLndlY2hhdEJ1c3NpbmVzc0tleQogICAgICAgICAgICAgICAgICAgICk6ICAjIGxpbmU6Mzc1OmlmIHNlbGYud2VjaGF0QnVzc2luZXNzS2V5OgogICAgICAgICAgICAgICAgICAgICAgICBwdXNoV2VjaGF0QnVzc2luZXNzKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgT09PMDBPME9PME9PMDAwT08ud2VjaGF0QnVzc2luZXNzS2V5LCBPMDBPMDBPME9PME8wME9PTwogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6Mzc2OnB1c2hXZWNoYXRCdXNzaW5lc3Moc2VsZi53ZWNoYXRCdXNzaW5lc3NLZXksIHdlY2hhdFBvc3RMaW5rKQogICAgICAgICAgICAgICAgICAgIGVsaWYgT09PMDBPME9PME9PMDAwT08uYXBwVG9rZW46ICAjIGxpbmU6Mzc3OmVsaWYgc2VsZi5hcHBUb2tlbjoKICAgICAgICAgICAgICAgICAgICAgICAgcHVzaCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9PTzAwTzBPTzBPTzAwME9PLmFwcFRva2VuLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgT09PMDBPME9PME9PMDAwT08udG9waWNJZHMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAi5bCP6ZiF6ZiF6ZiF6K+76L+H5qOA5rWLIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIE8wME8wME8wT08wTzAwT09PLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XemYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XSDmraPlnKjnrYnlvoXov4fmo4DmtYvvvIznrYnlvoXml7bpl7TvvJp7TzAwME8wMDBPME9PME9PT09956eSXG7lubvnlJ/mj5DnpLrvvJrlv6vngrnvvIzliKvogL3mkIHml7bpl7TkuobvvIEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInh5eXlkIiwKICAgICAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjM4NTopCiAgICAgICAgICAgICAgICAgICAgZWxzZTogICMgbGluZTozODY6ZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIuKaoO+4jyDotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XemYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XSDpnIDopoHov4fmo4DmtYvvvIzkvYbmmK/mnKrphY3nva7mjqjpgIF0b2tlbu+8jOS4uuS6humBv+WFjem7keWPt++8jOWBnOatoumYheivu+OAguOAguOAgiIKICAgICAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjM4OTopCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjM5MDpyZXR1cm4gRmFsc2UKICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6MzkxOmVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGYi4pyFIOi0puWPt1t7T09PMDBPME9PME9PMDAwT08ubmFtZX1d6ZiF6K+756ysW3tPTzBPTzAwME8wTzBPTzBPT31d56+H5paH56ugW3tPMDAwTzBPT09PTzAwME9PMFswXX1dIOmdnuajgOa1i+aWh+eroO+8jOaooeaLn+ivu3tPMDAwTzAwME8wT08wT09PT33np5IiCiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjM5NDopCiAgICAgICAgICAgICAgICBPT09PTzBPT09PMDAwMDAwTyA9ICgKICAgICAgICAgICAgICAgICAgICBPMDBPMDBPME9PME8wME9PTyAgIyBsaW5lOjM5NTpsYXN0ZXN0QXJjdGljbGVJZCA9IHdlY2hhdFBvc3RMaW5rCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBPT08wME8wT08wT08wMDBPTy5sYXN0Yml6ID0gT09PT08wTzBPMDBPTzAwTzBbCiAgICAgICAgICAgICAgICAgICAgNAogICAgICAgICAgICAgICAgXSAgIyBsaW5lOjM5NjpzZWxmLmxhc3RiaXogPSBhWzRdCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKE8wMDBPMDAwTzBPTzBPT09PKSAgIyBsaW5lOjM5Nzp0aW1lLnNsZWVwKHNsZWVwVGltZSkKICAgICAgICAgICAgICAgIE9PT09PMDAwTzAwME8wTzAwID0gZiJodHRwOi8vbnNyLnpzZjIwMjNlNDU4LmNsb3VkL3l1bm9ubGluZS92MS9nZXRfcmVhZF9nb2xkP3VrPXtPMDAwTzBPT09PTzAwME9PMFswXX0mdGltZT17TzAwME8wMDBPME9PME9PT099JnRpbWVzdGFtcD17dHMoKX0iICAjIGxpbmU6Mzk4OnUxID0gZiJodHRwOi8vbnNyLnpzZjIwMjNlNDU4LmNsb3VkL3l1bm9ubGluZS92MS9nZXRfcmVhZF9nb2xkP3VrPXtpbmZvWzBdfSZ0aW1lPXtzbGVlcFRpbWV9JnRpbWVzdGFtcD17dHMoKX0iCiAgICAgICAgICAgICAgICBPTzAwMDAwT08wME9PMDAwMCA9IHJlcXVlc3RzLmdldCgKICAgICAgICAgICAgICAgICAgICBPT09PTzAwME8wMDBPME8wMCwgaGVhZGVycz1PMDAwTzBPT09PTzAwME9PMFsxXSwgdmVyaWZ5PUZhbHNlCiAgICAgICAgICAgICAgICApICAjIGxpbmU6Mzk5OnIxID0gcmVxdWVzdHMuZ2V0KHUxLCBoZWFkZXJzPWluZm9bMV0sIHZlcmlmeT1GYWxzZSkKICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICBPTzAwMDAwT08wME9PMDAwMC50ZXh0IGFuZCBPTzAwMDAwT08wME9PMDAwMC5qc29uKCkKICAgICAgICAgICAgICAgICk6ICAjIGxpbmU6NDAwOmlmIHIxLnRleHQgYW5kIHIxLmpzb24oKToKICAgICAgICAgICAgICAgICAgICB0cnk6ICAjIGxpbmU6NDAxOnRyeToKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIuKchSDotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XemYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XeaJgOW+l+mHkeW4ge+8mntPTzAwMDAwT08wME9PMDAwMC5qc29uKClbJ2RhdGEnXVsnZ29sZCddfeS4qu+8jOi0puaIt+W9k+WJjemHkeW4ge+8mntPTzAwMDAwT08wME9PMDAwMC5qc29uKClbJ2RhdGEnXVsnbGFzdF9nb2xkJ1195Liq77yM5LuK5pel5bey6K+777yae09PMDAwMDBPTzAwT08wMDAwLmpzb24oKVsnZGF0YSddWydkYXlfcmVhZCddfeasoe+8jOS7iuaXpeacquivuyB7T08wMDAwME9PMDBPTzAwMDAuanNvbigpWydkYXRhJ11bJ3JlbWFpbl9yZWFkJ11956+H5paH56ugIgogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NDA0OikKICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIE9PT08wTzAwME8wT08wTzBPOiAgIyBsaW5lOjQwNTpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZiLinYwg6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3pmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6Bbe08wMDBPME9PT09PMDAwT08wWzBdfV3lvILluLjvvJp7T08wMDAwME9PMDBPTzAwMDAuanNvbigpLmdldCgnbXNnJyl9IgogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NDA4OikKICAgICAgICAgICAgICAgICAgICAgICAgaWYgIuacrOasoemYheivu+aXoOaViCIgaW4gT08wMDAwME9PMDBPTzAwMDAuanNvbigpLmdldCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtc2ciCiAgICAgICAgICAgICAgICAgICAgICAgICk6ICAjIGxpbmU6NDA5OmlmICLmnKzmrKHpmIXor7vml6DmlYgiIGluIHIxLmpzb24oKS5nZXQoIm1zZyIpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUgICMgbGluZTo0MTA6Y29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTogICMgbGluZTo0MTE6ZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrICAjIGxpbmU6NDEyOmJyZWFrCiAgICAgICAgICAgICAgICBlbHNlOiAgIyBsaW5lOjQxMzplbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICBmIuKdjCDotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XemYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XeWksei0pe+8mntPTzAwMDAwT08wME9PMDAwMC50ZXh0fSIKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NDE2OikKICAgICAgICAgICAgICAgICAgICBicmVhayAgIyBsaW5lOjQxNzpicmVhawogICAgICAgICAgICBlbGlmICgKICAgICAgICAgICAgICAgIE8wT09PME9PTzBPME8wTzAwLmdldCgiZXJyY29kZSIpID09IDQwNQogICAgICAgICAgICApOiAgIyBsaW5lOjQxODplbGlmIHJlcy5nZXQoImVycmNvZGUiKSA9PSA0MDU6CiAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICBmIuKaoO+4jyDotKblj7dbe09PTzAwTzBPTzBPTzAwME9PLm5hbWV9XemYheivu+esrFt7T08wT08wMDBPME8wT08wT099Xeevh+aWh+eroFt7TzAwME8wT09PT08wMDBPTzBbMF19XemYheivu+mHjeWkjSIKICAgICAgICAgICAgICAgICkgICMgbGluZTo0MTk6cHJpbnQoZiLimqDvuI8g6LSm5Y+3W3tzZWxmLm5hbWV9XemYheivu+esrFt7YXJjdGlsZVRpbWV9Xeevh+aWh+eroFt7aW5mb1swXX1d6ZiF6K+76YeN5aSNIikKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMS41KSAgIyBsaW5lOjQyMDp0aW1lLnNsZWVwKDEuNSkKICAgICAgICAgICAgZWxpZiAoCiAgICAgICAgICAgICAgICBPME9PTzBPT08wTzBPME8wMC5nZXQoImVycmNvZGUiKSA9PSA0MDcKICAgICAgICAgICAgKTogICMgbGluZTo0MjE6ZWxpZiByZXMuZ2V0KCJlcnJjb2RlIikgPT0gNDA3OgogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgZiLimqDvuI8g6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3pmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6Bbe08wMDBPME9PT09PMDAwT08wWzBdfV3pmIXor7vnu5PmnZ8iCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NDIyOnByaW50KGYi4pqg77iPIOi0puWPt1t7c2VsZi5uYW1lfV3pmIXor7vnrKxbe2FyY3RpbGVUaW1lfV3nr4fmlofnq6Bbe2luZm9bMF19XemYheivu+e7k+adnyIpCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZSAgIyBsaW5lOjQyMzpyZXR1cm4gVHJ1ZQogICAgICAgICAgICBlbHNlOiAgIyBsaW5lOjQyNDplbHNlOgogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgZiLimqDvuI8g6LSm5Y+3W3tPT08wME8wT08wT08wMDBPTy5uYW1lfV3pmIXor7vnrKxbe09PME9PMDAwTzBPME9PME9PfV3nr4fmlofnq6Bbe08wMDBPME9PT09PMDAwT08wWzBdfV3mnKrnn6Xmg4XlhrUiCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NDI1OnByaW50KGYi4pqg77iPIOi0puWPt1t7c2VsZi5uYW1lfV3pmIXor7vnrKxbe2FyY3RpbGVUaW1lfV3nr4fmlofnq6Bbe2luZm9bMF19XeacquefpeaDheWGtSIpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEuNSkgICMgbGluZTo0MjY6dGltZS5zbGVlcCgxLjUpCiAgICAgICAgICAgIE9PME9PMDAwTzBPME9PME9PID0gKAogICAgICAgICAgICAgICAgT08wT08wMDBPME8wT08wT08gKyAxCiAgICAgICAgICAgICkgICMgbGluZTo0Mjc6YXJjdGlsZVRpbWUgPSBhcmN0aWxlVGltZSArIDEKCiAgICBkZWYganVtcChPME9PMDAwT08wT09PT09PTywgT08wT09PME8wMDAwT08wME8pOiAgIyBsaW5lOjQyOTpkZWYganVtcChzZWxmLCBsaW5rKToKICAgICAgICBwcmludCgKICAgICAgICAgICAgZiLotKblj7dbe08wT08wMDBPTzBPT09PT09PLm5hbWV9XeW8gOWni+acrOasoemYheivu+KApuKApiIKICAgICAgICApICAjIGxpbmU6NDMwOnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeW8gOWni+acrOasoemYheivu+KApuKApiIpCiAgICAgICAgTzAwT09PMDBPT08wME9PME8gPSB1cmxwYXJzZSgKICAgICAgICAgICAgT08wT09PME8wMDAwT08wME8KICAgICAgICApLm5ldGxvYyAgIyBsaW5lOjQzMTpobiA9IHVybHBhcnNlKGxpbmspLm5ldGxvYwogICAgICAgIE9PMDAwME9PME9PTzAwMDAwID0gewogICAgICAgICAgICAiSG9zdCI6IE8wME9PTzAwT09PMDBPTzBPLAogICAgICAgICAgICAiQ29ubmVjdGlvbiI6ICJrZWVwLWFsaXZlIiwKICAgICAgICAgICAgIlVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHMiOiAiMSIsCiAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwNjIxKSBYV0VCLzgzNTEgRmx1ZSIsCiAgICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwKICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwKICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aCIsCiAgICAgICAgICAgICJDb29raWUiOiBmInlzbV91aWQ9e08wT08wMDBPTzBPT09PT09PLnlzbV91aWR9IiwKICAgICAgICB9ICAjIGxpbmU6NDQxOn0KICAgICAgICBPT08wTzAwT09PTzAwTzBPTyA9IHJlcXVlc3RzLmdldCgKICAgICAgICAgICAgT08wT09PME8wMDAwT08wME8sCiAgICAgICAgICAgIGhlYWRlcnM9T08wMDAwT08wT09PMDAwMDAsCiAgICAgICAgICAgIGFsbG93X3JlZGlyZWN0cz1GYWxzZSwKICAgICAgICAgICAgdmVyaWZ5PUZhbHNlLAogICAgICAgICkgICMgbGluZTo0NDI6ciA9IHJlcXVlc3RzLmdldChsaW5rLCBoZWFkZXJzPWgsIGFsbG93X3JlZGlyZWN0cz1GYWxzZSwgdmVyaWZ5PUZhbHNlKQogICAgICAgIE9PT09PT08wMDAwT09PMDBPID0gT09PME8wME9PT08wME8wT08uaGVhZGVycy5nZXQoCiAgICAgICAgICAgICJMb2NhdGlvbiIKICAgICAgICApICAjIGxpbmU6NDQ0OkxvY2F0aW9uID0gci5oZWFkZXJzLmdldCgiTG9jYXRpb24iKQogICAgICAgIHByaW50KAogICAgICAgICAgICBmIui0puWPt1t7TzBPTzAwME9PME9PT09PT08ubmFtZX1d5byA5aeL6ZiF6K+75paH56ugIC0ge09PT09PT08wMDAwT09PMDBPfSIKICAgICAgICApICAjIGxpbmU6NDQ1OnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeW8gOWni+mYheivu+aWh+eroCAtIHtMb2NhdGlvbn0iKQogICAgICAgIHJldHVybiBPT09PT09PMDAwME9PTzAwTyAgIyBsaW5lOjQ0NjpyZXR1cm4gTG9jYXRpb24KCiAgICBkZWYgd2l0aGRyYXcoT09PTzBPMDAwME8wMDBPME8pOiAgIyBsaW5lOjQ0ODpkZWYgd2l0aGRyYXcoc2VsZik6CiAgICAgICAgT08wTzAwME9PMDAwT09PME8gPSAoCiAgICAgICAgICAgIGludChpbnQoT09PTzBPMDAwME8wMDBPME8ucmVtYWluKSAvIDEwMDApICogMTAwMAogICAgICAgICkgICMgbGluZTo0NTI6Z29sZCA9IGludChpbnQoc2VsZi5yZW1haW4pIC8gMTAwMCkgKiAxMDAwCiAgICAgICAgcHJpbnQoCiAgICAgICAgICAgIGYi6LSm5Y+3W3tPT09PME8wMDAwTzAwME8wTy5uYW1lfV3mnKzmrKHmj5DnjrDph5HluIEiLCBPTzBPMDAwT08wMDBPT08wTwogICAgICAgICkgICMgbGluZTo0NTM6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1d5pys5qyh5o+Q546w6YeR5biBIiwgZ29sZCkKICAgICAgICBpZiBPTzBPMDAwT08wMDBPT08wTzogICMgbGluZTo0NTQ6aWYgZ29sZDoKICAgICAgICAgICAgTzAwT08wT09PMDBPTzBPMDAgPSB1cmxzcGxpdCgKICAgICAgICAgICAgICAgIE9PT08wTzAwMDBPMDAwTzBPLmV4Y2hhbmdlUGFyYW1zCiAgICAgICAgICAgICkucXVlcnkgICMgbGluZTo0NTU6cXVlcnkgPSB1cmxzcGxpdChzZWxmLmV4Y2hhbmdlUGFyYW1zKS5xdWVyeQogICAgICAgICAgICBPTzBPT08wT08wMDBPME9PMCA9IHBhcnNlX3FzKAogICAgICAgICAgICAgICAgTzAwT08wT09PMDBPTzBPMDAKICAgICAgICAgICAgKSAgIyBsaW5lOjQ1NjpleGNoYW5nZVBhcmFtcyA9IHBhcnNlX3FzKHF1ZXJ5KQogICAgICAgICAgICBmb3IgKAogICAgICAgICAgICAgICAgTzAwMDBPME8wME9PTzBPME8sCiAgICAgICAgICAgICAgICBPME8wME8wMDBPTzAwME8wTywKICAgICAgICAgICAgKSBpbiAoCiAgICAgICAgICAgICAgICBPTzBPT08wT08wMDBPME9PMC5pdGVtcygpCiAgICAgICAgICAgICk6ICAjIGxpbmU6NDU4OmZvciBrZXksIHZhbHVlIGluIGV4Y2hhbmdlUGFyYW1zLml0ZW1zKCk6CiAgICAgICAgICAgICAgICBPTzBPT08wT08wMDBPME9PMFtPMDAwME8wTzAwT09PME8wT10gPSBPME8wME8wMDBPTzAwME8wT1sKICAgICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICBdICAjIGxpbmU6NDU5OmV4Y2hhbmdlUGFyYW1zW2tleV0gPSB2YWx1ZVswXQogICAgICAgICAgICBPMDBPT08wME8wT09PMDAwMCA9IGYiaHR0cDovL3tPT09PME8wMDAwTzAwME8wTy5kb21uYWluSG9zdH0veXVub25saW5lL3YxL3VzZXJfZ29sZCIgICMgbGluZTo0NjE6dTEgPSBmImh0dHA6Ly97c2VsZi5kb21uYWluSG9zdH0veXVub25saW5lL3YxL3VzZXJfZ29sZCIKICAgICAgICAgICAgT08wT08wT09PT08wME9PTzAgPSBmInVuaW9uaWQ9e09PME9PTzBPTzAwME8wT08wWyd1bmlvbmlkJ119JnJlcXVlc3RfaWQ9e09PME9PTzBPTzAwME8wT08wWydyZXF1ZXN0X2lkJ119JmdvbGQ9e09PME8wMDBPTzAwME9PTzBPfSIgICMgbGluZTo0NjI6cDEgPSBmInVuaW9uaWQ9e2V4Y2hhbmdlUGFyYW1zWyd1bmlvbmlkJ119JnJlcXVlc3RfaWQ9e2V4Y2hhbmdlUGFyYW1zWydyZXF1ZXN0X2lkJ119JmdvbGQ9e2dvbGR9IgogICAgICAgICAgICBPME9PT09PMDBPME9PTzBPTyA9IHJlcXVlc3RzLnBvc3QoCiAgICAgICAgICAgICAgICBPMDBPT08wME8wT09PMDAwMCwKICAgICAgICAgICAgICAgIGRhdGE9T08wT08wT09PT08wME9PTzAsCiAgICAgICAgICAgICAgICBoZWFkZXJzPXsKICAgICAgICAgICAgICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiLAogICAgICAgICAgICAgICAgICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsCiAgICAgICAgICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aDtxPTAuOSIsCiAgICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLAogICAgICAgICAgICAgICAgICAgICJDb29raWUiOiBmInlzbXVpZD17T09PTzBPMDAwME8wMDBPME8ueXNtX3VpZH07IGVqZWN0Q29kZT0xIiwKICAgICAgICAgICAgICAgICAgICAiSG9zdCI6IGYie09PT08wTzAwMDBPMDAwTzBPLmRvbW5haW5Ib3N0fSIsCiAgICAgICAgICAgICAgICAgICAgIk9yaWdpbiI6IGYiaHR0cDovL3tPT09PME8wMDAwTzAwME8wTy5kb21uYWluSG9zdH0iLAogICAgICAgICAgICAgICAgICAgICJQcm94eS1Db25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAogICAgICAgICAgICAgICAgICAgICJSZWZlcmVyIjogZiJodHRwOi8ve09PT08wTzAwMDBPMDAwTzBPLmRvbW5haW5Ib3N0fS95dW5vbmxpbmUvdjEvZXhjaGFuZ2V7T09PTzBPMDAwME8wMDBPME8uZXhjaGFuZ2VQYXJhbXN9IiwKICAgICAgICAgICAgICAgICAgICAiVXNlci1BZ2VudCI6ICJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTA3LjAuMC4wIFNhZmFyaS81MzcuMzYgTmV0VHlwZS9XSUZJIE1pY3JvTWVzc2VuZ2VyLzcuMC4yMC4xNzgxKDB4NjcwMDE0M0IpIFdpbmRvd3NXZWNoYXQoMHg2MzA5MDcxZCkgWFdFQi84NDYxIEZsdWUiLAogICAgICAgICAgICAgICAgICAgICJYLVJlcXVlc3RlZC1XaXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB2ZXJpZnk9RmFsc2UsCiAgICAgICAgICAgICkgICMgbGluZTo0ODA6KQogICAgICAgICAgICB0cnk6ICAjIGxpbmU6NDgxOnRyeToKICAgICAgICAgICAgICAgIE8wMDBPMDBPT08wME9PME8wID0gTzBPT09PTzAwTzBPT08wT08uanNvbigpICAjIGxpbmU6NDgyOnJlcyA9IHIuanNvbigpCiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgTzAwME8wME9PTzAwT08wTzAuZ2V0KCJlcnJjb2RlIikgPT0gMAogICAgICAgICAgICAgICAgKTogICMgbGluZTo0ODM6aWYgcmVzLmdldCgiZXJyY29kZSIpID09IDA6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGYi4pyFIOi0puWPt1t7T09PTzBPMDAwME8wMDBPME8ubmFtZX1dIOmHkeW4geWFkeaNouS4uueOsOmHkeaIkOWKn++8jOW8gOWni+aPkOeOsCA+Pj4gIgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo0ODQ6cHJpbnQoZiLinIUg6LSm5Y+3W3tzZWxmLm5hbWV9XSDph5HluIHlhZHmjaLkuLrnjrDph5HmiJDlip/vvIzlvIDlp4vmj5DnjrAgPj4+ICIpCiAgICAgICAgICAgICAgICAgICAgT09PME8wTzBPME9PME8wTzAgPSBmImh0dHA6Ly97T09PTzBPMDAwME8wMDBPME8uZG9tbmFpbkhvc3R9L3l1bm9ubGluZS92MS93aXRoZHJhdyIgICMgbGluZTo0ODU6dSA9IGYiaHR0cDovL3tzZWxmLmRvbW5haW5Ib3N0fS95dW5vbmxpbmUvdjEvd2l0aGRyYXciCiAgICAgICAgICAgICAgICAgICAgT08wTzAwTzBPTzAwME9PME8gPSBmInVuaW9uaWQ9e09PME9PTzBPTzAwME8wT08wWyd1bmlvbmlkJ119JnNpZ25pZD17T08wT09PME9PMDAwTzBPTzBbJ3JlcXVlc3RfaWQnXX0mdWE9MCZwdHlwZT0wJnBhY2NvdW50PSZwbmFtZT0iICAjIGxpbmU6NDg2OnAgPSBmInVuaW9uaWQ9e2V4Y2hhbmdlUGFyYW1zWyd1bmlvbmlkJ119JnNpZ25pZD17ZXhjaGFuZ2VQYXJhbXNbJ3JlcXVlc3RfaWQnXX0mdWE9MCZwdHlwZT0wJnBhY2NvdW50PSZwbmFtZT0iCiAgICAgICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgICAgICBPT09PME8wMDAwTzAwME8wTy5hbGlBY2NvdW50IGFuZCBPT09PME8wMDAwTzAwME8wTy5hbGlOYW1lCiAgICAgICAgICAgICAgICAgICAgKTogICMgbGluZTo0ODc6aWYgc2VsZi5hbGlBY2NvdW50IGFuZCBzZWxmLmFsaU5hbWU6CiAgICAgICAgICAgICAgICAgICAgICAgIE9PME8wME8wT08wMDBPTzBPID0gZiJ1bmlvbmlkPXtPTzBPT08wT08wMDBPME9PMFsndW5pb25pZCddfSZzaWduaWQ9e09PME9PTzBPTzAwME8wT08wWydyZXF1ZXN0X2lkJ119JnVhPTImcHR5cGU9MSZwYWNjb3VudD17cXVvdGUoT09PTzBPMDAwME8wMDBPME8uYWxpQWNjb3VudCl9JnBuYW1lPXtxdW90ZShPT09PME8wMDAwTzAwME8wTy5hbGlOYW1lKX0iICAjIGxpbmU6NDg4OnAgPSBmInVuaW9uaWQ9e2V4Y2hhbmdlUGFyYW1zWyd1bmlvbmlkJ119JnNpZ25pZD17ZXhjaGFuZ2VQYXJhbXNbJ3JlcXVlc3RfaWQnXX0mdWE9MiZwdHlwZT0xJnBhY2NvdW50PXtxdW90ZShzZWxmLmFsaUFjY291bnQpfSZwbmFtZT17cXVvdGUoc2VsZi5hbGlOYW1lKX0iCiAgICAgICAgICAgICAgICAgICAgTzBPT09PTzAwTzBPT08wT08gPSByZXF1ZXN0cy5wb3N0KAogICAgICAgICAgICAgICAgICAgICAgICBPT08wTzBPME8wT08wTzBPMCwKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVycz17CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiemgtQ04semg7cT0wLjkiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNvb2tpZSI6IGYieXNtdWlkPXtPT09PME8wMDAwTzAwME8wTy55c21fdWlkfTsgZWplY3RDb2RlPTEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkhvc3QiOiBmIntPT09PME8wMDAwTzAwME8wTy5kb21uYWluSG9zdH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIk9yaWdpbiI6IGYiaHR0cDovL3tPT09PME8wMDAwTzAwME8wTy5kb21uYWluSG9zdH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlByb3h5LUNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUmVmZXJlciI6IGYiaHR0cDovL3tPT09PME8wMDAwTzAwME8wTy5kb21uYWluSG9zdH0veXVub25saW5lL3YxL2V4Y2hhbmdlP3VuaW9uaWQ9e09PME9PTzBPTzAwME8wT08wWyd1bmlvbmlkJ119JnJlcXVlc3RfaWQ9e09PME9PTzBPTzAwME8wT08wWydyZXF1ZXN0X2lkJ119JnFyY29kZV9udW1iZXI9MTY2MDc4NjQzNTgxNDU1ODgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlgtUmVxdWVzdGVkLVdpdGgiOiAiWE1MSHR0cFJlcXVlc3QiLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhPU9PME8wME8wT08wMDBPTzBPLAogICAgICAgICAgICAgICAgICAgICAgICB2ZXJpZnk9RmFsc2UsCiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjUwNTopCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGYi4pyFIOi0puWPt1t7T09PTzBPMDAwME8wMDBPME8ubmFtZX1dIOaPkOeOsOe7k+aenCIsIE8wT09PT08wME8wT09PME9PLmpzb24oKQogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo1MDY6cHJpbnQoZiLinIUg6LSm5Y+3W3tzZWxmLm5hbWV9XSDmj5DnjrDnu5PmnpwiLCByLmpzb24oKSkKICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6NTA3OmVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPT09PME8wMDAwTzAwME8wTy5uYW1lfV0g6YeR5biB5YWR5o2i5Li6546w6YeR5aSx6LSl77yaIiwKICAgICAgICAgICAgICAgICAgICAgICAgTzBPT09PTzAwTzBPT08wT08udGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgIiDmj5DnjrDlnLDlnYDvvJoiLAogICAgICAgICAgICAgICAgICAgICAgICBPMDBPT08wME8wT09PMDAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgIiDmj5DnjrDlj4LmlbDvvJoiLAogICAgICAgICAgICAgICAgICAgICAgICBPTzBPTzBPT09PTzAwT09PMCwKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NTE1OikKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBPT09PME9PMDAwT09PTzAwMDogICMgbGluZTo1MTY6ZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PT08wTzAwMDBPMDAwTzBPLm5hbWV9XSDmj5DnjrDlpLHotKXvvJoiLAogICAgICAgICAgICAgICAgICAgIE8wT09PT08wME8wT09PME9PLnRleHQsCiAgICAgICAgICAgICAgICAgICAgIiDmj5DnjrDlnLDlnYDvvJoiLAogICAgICAgICAgICAgICAgICAgIE8wME9PTzAwTzBPT08wMDAwLAogICAgICAgICAgICAgICAgICAgICIg5o+Q546w5Y+C5pWw77yaIiwKICAgICAgICAgICAgICAgICAgICBPTzBPTzBPT09PTzAwT09PMCwKICAgICAgICAgICAgICAgICkgICMgbGluZTo1MTg6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1dIOaPkOeOsOWksei0pe+8miIsIHIudGV4dCwgIiDmj5DnjrDlnLDlnYDvvJoiLCB1MSwgIiDmj5DnjrDlj4LmlbDvvJoiLCBwMSkKCiAgICBkZWYgaW5pdChPTzAwT09PME9PT08wMDAwTyk6ICAjIGxpbmU6NTIwOmRlZiBpbml0KHNlbGYpOgogICAgICAgIHRyeTogICMgbGluZTo1MjE6dHJ5OgogICAgICAgICAgICBPME9PTzBPMDAwME8wT08wMCA9ICgKICAgICAgICAgICAgICAgIHN0cmluZy5hc2NpaV9sZXR0ZXJzICsgc3RyaW5nLmRpZ2l0cwogICAgICAgICAgICApICAjIGxpbmU6NTIyOmNoYXJhY3RlcnMgPSBzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMKICAgICAgICAgICAgT08wTzBPT09PTzAwT09PMDAgPSByZXF1ZXN0cy5nZXQoCiAgICAgICAgICAgICAgICBmImh0dHBzOi8vbnNyLnpzZjIwMjNlNDU4LmNsb3VkL3l1bm9ubGluZS92MS9nZXRjaGF0c2l0ZT90PXt0aW1lLnRpbWUoKX0mY2lkPXsnJy5qb2luKHJhbmRvbS5jaG9pY2VzKE8wT09PME8wMDAwTzBPTzAwLCBrPTMyKSl9JmNvZGU9MDgxa3RSRmExVE02MEgwZ3I0R2ExVXsnJy5qb2luKHJhbmRvbS5jaG9pY2VzKE8wT09PME8wMDAwTzBPTzAwLCBrPTEwKSl9JnN0YXRlPTEiLAogICAgICAgICAgICAgICAgdmVyaWZ5PUZhbHNlLAogICAgICAgICAgICApICAjIGxpbmU6NTI2OikKICAgICAgICAgICAgT08wME9PTzBPT09PMDAwME8uZG9tbmFpbkhvc3QgPSBPTzBPME9PT09PMDBPT08wMC5qc29uKClbImRhdGEiXVsKICAgICAgICAgICAgICAgICJsdW9kaSIKICAgICAgICAgICAgXS5zcGxpdCgiLyIpWwogICAgICAgICAgICAgICAgMgogICAgICAgICAgICBdICAjIGxpbmU6NTI3OnNlbGYuZG9tbmFpbkhvc3QgPSByLmpzb24oKVsiZGF0YSJdWyJsdW9kaSJdLnNwbGl0KCIvIilbMl0KICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7T08wME9PTzBPT09PMDAwME8ubmFtZX1d5o+Q5Y+W5Yiw55qE5Z+f5ZCN77yae09PMDBPT08wT09PTzAwMDBPLmRvbW5haW5Ib3N0fSIKICAgICAgICAgICAgKSAgIyBsaW5lOjUyOTpwcmludChmIui0puWPt1t7c2VsZi5uYW1lfV3mj5Dlj5bliLDnmoTln5/lkI3vvJp7c2VsZi5kb21uYWluSG9zdH0iKQogICAgICAgICAgICBPTzAwT09PME9PT08wMDAwTy5oZWFkZXJzID0gewogICAgICAgICAgICAgICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCiAgICAgICAgICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiLAogICAgICAgICAgICAgICAgIlVzZXItQWdlbnQiOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwNy4wLjAuMCBTYWZhcmkvNTM3LjM2IE5ldFR5cGUvV0lGSSBNaWNyb01lc3Nlbmdlci83LjAuMjAuMTc4MSgweDY3MDAxNDNCKSBXaW5kb3dzV2VjaGF0KDB4NjMwOTA2MjEpIFhXRUIvODM1MSBGbHVlIiwKICAgICAgICAgICAgICAgICJYLVJlcXVlc3RlZC1XaXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwKICAgICAgICAgICAgICAgICJSZWZlcmVyIjogZiJodHRwOi8ve09PMDBPT08wT09PTzAwMDBPLmRvbW5haW5Ib3N0fS8iLAogICAgICAgICAgICAgICAgIk9yaWdpbiI6IGYiaHR0cDovL3tPTzAwT09PME9PT08wMDAwTy5kb21uYWluSG9zdH0iLAogICAgICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwKICAgICAgICAgICAgICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiemgtQ04semgiLAogICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLAogICAgICAgICAgICAgICAgIkNvb2tpZSI6IGYieXNtX3VpZD17T08wME9PTzBPT09PMDAwME8ueXNtX3VpZH07IiwKICAgICAgICAgICAgfSAgIyBsaW5lOjU0Mjp9CiAgICAgICAgICAgIE9PMDBPT08wT09PTzAwMDBPLnNpZ25pZCA9ICIiICAjIGxpbmU6NTQ0OnNlbGYuc2lnbmlkID0gIiIKICAgICAgICAgICAgZm9yIE8wTzAwT08wMDBPMDBPT08wIGluIHJhbmdlKDMpOiAgIyBsaW5lOjU0NTpmb3IgaSBpbiByYW5nZSgzKToKICAgICAgICAgICAgICAgIE9PME8wT09PT08wME9PTzAwID0gcmVxdWVzdHMuZ2V0KAogICAgICAgICAgICAgICAgICAgIGYiaHR0cDovL3tPTzAwT09PME9PT08wMDAwTy5kb21uYWluSG9zdH0vIiwKICAgICAgICAgICAgICAgICAgICBoZWFkZXJzPXsKICAgICAgICAgICAgICAgICAgICAgICAgIlVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHMiOiAiMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwNzFkKSBYV0VCLzg0NjEgRmx1ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwKICAgICAgICAgICAgICAgICAgICAgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwKICAgICAgICAgICAgICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aDtxPTAuOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJDb29raWUiOiBmInlzbXVpZD17T08wME9PTzBPT09PMDAwME8ueXNtX3VpZH0iLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgdmVyaWZ5PUZhbHNlLAogICAgICAgICAgICAgICAgKSAgIyBsaW5lOjU1NzopCiAgICAgICAgICAgICAgICBPME8wMDBPMDAwME9PMDAwTyA9IE9PME8wT09PT08wME9PTzAwLnRleHQgICMgbGluZTo1NTg6aHRtbHRleHQgPSByLnRleHQKICAgICAgICAgICAgICAgIGlmIE9PME8wT09PT08wME9PTzAwLmhpc3Rvcnk6ICAjIGxpbmU6NTU5OmlmIHIuaGlzdG9yeToKICAgICAgICAgICAgICAgICAgICBmb3IgKAogICAgICAgICAgICAgICAgICAgICAgICBPT08wT09PME8wMDAwT09PTwogICAgICAgICAgICAgICAgICAgICkgaW4gT08wTzBPT09PTzAwT09PMDAuaGlzdG9yeTogICMgbGluZTo1NjA6Zm9yIHJlc3AgaW4gci5oaXN0b3J5OgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAib3Blbi53ZWl4aW4ucXEuY29tIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4gT09PME9PTzBPMDAwME9PT08uaGVhZGVyc1siTG9jYXRpb24iXQogICAgICAgICAgICAgICAgICAgICAgICApOiAgIyBsaW5lOjU2MTppZiAib3Blbi53ZWl4aW4ucXEuY29tIiBpbiByZXNwLmhlYWRlcnNbIkxvY2F0aW9uIl06CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIui0puWPt1t7T08wME9PTzBPT09PMDAwME8ubmFtZX1dIENvb2tpZeW3sui/h+acn++8jOivt+mHjei/m+S4gOS4i+e9keerme+8jOWwseS8muiHquWKqOabtOaWsENvb2tpZe+8iOebruWJjeS4jeehruWumui/h+acn+aYr+WboOS4uuiHquW3seaJi+WKqOi/m+WOu+i/h+S6hui/mOaYr+S7gOS5iOWFtuS7luWOn+WboO+8iSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo1NjQ6KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAjIGxpbmU6NTY1OnJldHVybiBGYWxzZQogICAgICAgICAgICAgICAgT09PT08wMDAwT09PME9PTzAgPSByZS5zdWIoCiAgICAgICAgICAgICAgICAgICAgIlxzIiwgIiIsIE8wTzAwME8wMDAwT08wMDBPCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NTY2OnJlczEgPSByZS5zdWIoIlxzIiwgIiIsIGh0bWx0ZXh0KQogICAgICAgICAgICAgICAgT09PTzAwME9PMDAwMDBPT08gPSByZS5maW5kYWxsKAogICAgICAgICAgICAgICAgICAgICdcKVx8XHwiKC4qPykiOycsIE9PT09PMDAwME9PTzBPT08wCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NTY3OnNpZ25pZGwgPSByZS5maW5kYWxsKCdcKVx8XHwiKC4qPykiOycsIHJlczEpCiAgICAgICAgICAgICAgICBpZiBPT09PMDAwT08wMDAwME9PTyA9PSBbXTogICMgbGluZTo1Njk6aWYgc2lnbmlkbCA9PSBbXToKICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpICAjIGxpbmU6NTcwOnRpbWUuc2xlZXAoMSkKICAgICAgICAgICAgICAgICAgICBjb250aW51ZSAgIyBsaW5lOjU3MTpjb250aW51ZQogICAgICAgICAgICAgICAgZWxzZTogICMgbGluZTo1NzI6ZWxzZToKICAgICAgICAgICAgICAgICAgICBPTzAwT09PME9PT08wMDAwTy5zaWduaWQgPSBPT09PMDAwT08wMDAwME9PT1sKICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgIF0gICMgbGluZTo1NzM6c2VsZi5zaWduaWQgPSBzaWduaWRsWzBdCiAgICAgICAgICAgICAgICAgICAgYnJlYWsgICMgbGluZTo1NzQ6YnJlYWsKICAgICAgICAgICAgaWYgT08wME9PTzBPT09PMDAwME8uc2lnbmlkID09ICIiOiAgIyBsaW5lOjU3NTppZiBzZWxmLnNpZ25pZCA9PSAiIjoKICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3tPTzAwT09PME9PT08wMDAwTy5uYW1lfV3liJ3lp4vljJYgcmVxdWVzdElkIOWksei0pSzotKblj7flvILluLgiCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NTc2OnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeWIneWni+WMliByZXF1ZXN0SWQg5aSx6LSlLOi0puWPt+W8guW4uCIpCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UgICMgbGluZTo1Nzc6cmV0dXJuIEZhbHNlCiAgICAgICAgICAgIE9PME8wT09PT08wME9PTzAwID0gcmVxdWVzdHMuZ2V0KAogICAgICAgICAgICAgICAgZiJodHRwOi8ve09PMDBPT08wT09PTzAwMDBPLmRvbW5haW5Ib3N0fS8/Y2F0ZT0wIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM9ewogICAgICAgICAgICAgICAgICAgICJVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzIjogIjEiLAogICAgICAgICAgICAgICAgICAgICJVc2VyLUFnZW50IjogIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiBOZXRUeXBlL1dJRkkgTWljcm9NZXNzZW5nZXIvNy4wLjIwLjE3ODEoMHg2NzAwMTQzQikgV2luZG93c1dlY2hhdCgweDYzMDkwNzFkKSBYV0VCLzg0NjEgRmx1ZSIsCiAgICAgICAgICAgICAgICAgICAgIkFjY2VwdCI6ICJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLAogICAgICAgICAgICAgICAgICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsCiAgICAgICAgICAgICAgICAgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJ6aC1DTix6aDtxPTAuOSIsCiAgICAgICAgICAgICAgICAgICAgIkNvb2tpZSI6IGYieXNtdWlkPXtPTzAwT09PME9PT08wMDAwTy55c21fdWlkfSIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdmVyaWZ5PUZhbHNlLAogICAgICAgICAgICApICAjIGxpbmU6NTkwOikKICAgICAgICAgICAgTzBPMDAwTzAwMDBPTzAwME8gPSBPTzBPME9PT09PMDBPT08wMC50ZXh0ICAjIGxpbmU6NTkxOmh0bWx0ZXh0ID0gci50ZXh0CiAgICAgICAgICAgIE9PT09PMDAwME9PTzBPT08wID0gcmUuc3ViKAogICAgICAgICAgICAgICAgIlxzIiwgIiIsIE8wTzAwME8wMDAwT08wMDBPCiAgICAgICAgICAgICkgICMgbGluZTo1OTI6cmVzMSA9IHJlLnN1YigiXHMiLCAiIiwgaHRtbHRleHQpCiAgICAgICAgICAgIE9PT08wMDBPTzAwMDAwT09PID0gcmUuZmluZGFsbCgKICAgICAgICAgICAgICAgICcveXVub25saW5lL3YxL2V4Y2hhbmdlKC4qPykiJywgT09PT08wMDAwT09PME9PTzAKICAgICAgICAgICAgKSAgIyBsaW5lOjU5MzpzaWduaWRsID0gcmUuZmluZGFsbCgnL3l1bm9ubGluZS92MS9leGNoYW5nZSguKj8pIicsIHJlczEpCiAgICAgICAgICAgIGlmIE9PT08wMDBPTzAwMDAwT09PID09IFtdOiAgIyBsaW5lOjU5NTppZiBzaWduaWRsID09IFtdOgogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgZiLotKblj7dbe09PMDBPT08wT09PTzAwMDBPLm5hbWV9XeWIneWni+WMliDmj5DnjrDlj4LmlbAg5aSx6LSlLOi0puWPt+W8guW4uCIKICAgICAgICAgICAgICAgICkgICMgbGluZTo1OTY6cHJpbnQoZiLotKblj7dbe3NlbGYubmFtZX1d5Yid5aeL5YyWIOaPkOeOsOWPguaVsCDlpLHotKUs6LSm5Y+35byC5bi4IikKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjU5NzpyZXR1cm4gRmFsc2UKICAgICAgICAgICAgZWxzZTogICMgbGluZTo1OTg6ZWxzZToKICAgICAgICAgICAgICAgIE9PMDBPT08wT09PTzAwMDBPLmV4Y2hhbmdlUGFyYW1zID0gT09PTzAwME9PMDAwMDBPT09bCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgXSAgIyBsaW5lOjU5OTpzZWxmLmV4Y2hhbmdlUGFyYW1zID0gc2lnbmlkbFswXQogICAgICAgICAgICByZXR1cm4gVHJ1ZSAgIyBsaW5lOjYwMDpyZXR1cm4gVHJ1ZQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgT09PT08wT09PT08wME8wMDA6ICAjIGxpbmU6NjAxOmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7T08wME9PTzBPT09PMDAwME8ubmFtZX1d5Yid5aeL5YyW5aSx6LSlLOivt+ajgOafpeS9oOeahGNrIgogICAgICAgICAgICApICAjIGxpbmU6NjAzOnByaW50KGYi6LSm5Y+3W3tzZWxmLm5hbWV9XeWIneWni+WMluWksei0pSzor7fmo4Dmn6XkvaDnmoRjayIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSAgIyBsaW5lOjYwNDpyZXR1cm4gRmFsc2UKCiAgICBkZWYgcnVuKE9PME8wMDAwT08wTzAwTzAwKTogICMgbGluZTo2MDY6ZGVmIHJ1bihzZWxmKToKICAgICAgICBpZiBPTzBPMDAwME9PME8wME8wMC5pbml0KCk6ICAjIGxpbmU6NjA3OmlmIHNlbGYuaW5pdCgpOgogICAgICAgICAgICBPTzBPMDAwME9PME8wME8wMC51c2VyX2luZm8oKSAgIyBsaW5lOjYwODpzZWxmLnVzZXJfaW5mbygpCiAgICAgICAgICAgIE9PME8wMDAwT08wTzAwTzAwLmhhc1dlY2hhdCgpICAjIGxpbmU6NjA5OnNlbGYuaGFzV2VjaGF0KCkKICAgICAgICAgICAgT08wTzAwMDBPTzBPMDBPMDAuZ29sZCgpICAjIGxpbmU6NjEwOnNlbGYuZ29sZCgpCiAgICAgICAgICAgIE9PME8wMDAwT08wTzAwTzAwLnJlYWQoKSAgIyBsaW5lOjYxMTpzZWxmLnJlYWQoKQogICAgICAgICAgICB0aW1lLnNsZWVwKDMpICAjIGxpbmU6NjEyOnRpbWUuc2xlZXAoMykKICAgICAgICAgICAgT08wTzAwMDBPTzBPMDBPMDAuZ29sZCgpICAjIGxpbmU6NjEzOnNlbGYuZ29sZCgpCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMykgICMgbGluZTo2MTQ6dGltZS5zbGVlcCgzKQogICAgICAgICAgICBPTzBPMDAwME9PME8wME8wMC53aXRoZHJhdygpICAjIGxpbmU6NjE1OnNlbGYud2l0aGRyYXcoKQoKCmRlZiBnZXROZXdJbnZpdGVVcmwoKTogICMgbGluZTo2MTg6ZGVmIGdldE5ld0ludml0ZVVybCgpOgogICAgTzAwMDAwME9PMDBPME8wMDAgPSByZXF1ZXN0cy5nZXQoCiAgICAgICAgImh0dHBzOi8vd3d3LmZpbGVzbWVqLmNuL3dhaWRvbWFpbi5waHAiLCB2ZXJpZnk9RmFsc2UKICAgICkuanNvbigpICAjIGxpbmU6NjE5OnIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vd3d3LmZpbGVzbWVqLmNuL3dhaWRvbWFpbi5waHAiLCB2ZXJpZnk9RmFsc2UpLmpzb24oKQogICAgaWYgTzAwMDAwME9PMDBPME8wMDAuZ2V0KCJjb2RlIikgPT0gMDogICMgbGluZTo2MjA6aWYgci5nZXQoImNvZGUiKSA9PSAwOgogICAgICAgIE8wT08wT08wMDAwME9PT09PID0gTzAwMDAwME9PMDBPME8wMDAuZ2V0KCJkYXRhIikuZ2V0KAogICAgICAgICAgICAibHVvZGkiCiAgICAgICAgKSAgIyBsaW5lOjYyMTpuZXdFbnRyeVVybCA9IHIuZ2V0KCJkYXRhIikuZ2V0KCJsdW9kaSIpCiAgICAgICAgT09PT09PT08wMDAwME8wME8gPSB1cmxwYXJzZSgKICAgICAgICAgICAgTzBPTzBPTzAwMDAwT09PT08KICAgICAgICApICAjIGxpbmU6NjIyOnBhcnNlZF91cmwgPSB1cmxwYXJzZShuZXdFbnRyeVVybCkKICAgICAgICBPMDBPME8wMDBPTzAwT09PMCA9ICgKICAgICAgICAgICAgT09PT09PT08wMDAwME8wME8uaG9zdG5hbWUKICAgICAgICApICAjIGxpbmU6NjIzOmhvc3QgPSBwYXJzZWRfdXJsLmhvc3RuYW1lCiAgICAgICAgcmV0dXJuIGYiaHR0cHM6Ly91N2RzLnN5NjczLnNob3AveXVub25saW5lL3YxL2F1dGgvMjYzOWJiOTVkYWJhMWQ5OWU1MzM4YThjMmUyMWUyZjA/Y29kZXVybD11N2RzLnN5NjczLnNob3AmY29kZXVzZXJpZD0yJnRpbWU9MTcwOTAyMTE3NiIucmVwbGFjZSgKICAgICAgICAgICAgInU3ZHMuc3k2NzMuc2hvcCIsIE8wME8wTzAwME9PMDBPT08wIG9yICJ1N2RzLnN5NjczLnNob3AiCiAgICAgICAgKSAgIyBsaW5lOjYyNjopCiAgICBlbHNlOiAgIyBsaW5lOjYyNzplbHNlOgogICAgICAgIHJldHVybiAiaHR0cHM6Ly91N2RzLnN5NjczLnNob3AveXVub25saW5lL3YxL2F1dGgvMjYzOWJiOTVkYWJhMWQ5OWU1MzM4YThjMmUyMWUyZjA/Y29kZXVybD11N2RzLnN5NjczLnNob3AmY29kZXVzZXJpZD0yJnRpbWU9MTcwOTAyMTE3NiIgICMgbGluZTo2Mjg6cmV0dXJuICJodHRwczovL3U3ZHMuc3k2NzMuc2hvcC95dW5vbmxpbmUvdjEvYXV0aC8yNjM5YmI5NWRhYmExZDk5ZTUzMzhhOGMyZTIxZTJmMD9jb2RldXJsPXU3ZHMuc3k2NzMuc2hvcCZjb2RldXNlcmlkPTImdGltZT0xNzA5MDIxMTc2IgoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6ICAjIGxpbmU6NjMxOmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhY2NvdW50cyA9IG9zLmdldGVudigieHl5eWQiKSAgIyBsaW5lOjYzNTphY2NvdW50cyA9IG9zLmdldGVudigieHl5eWQiKQogICAgaW52aXRlVXJsID0gZ2V0TmV3SW52aXRlVXJsKCkgICMgbGluZTo2MzY6aW52aXRlVXJsID0gZ2V0TmV3SW52aXRlVXJsKCkKICAgIGlmIGFjY291bnRzIGlzIE5vbmU6ICAjIGxpbmU6NjM3OmlmIGFjY291bnRzIGlzIE5vbmU6CiAgICAgICAgcHJpbnQoCiAgICAgICAgICAgIGYi5L2g5rKh5pyJ5aGr5YWleHl5eWTvvIzlkovov5DooYzvvJ9cbui1sOS4i+mCgOivt+WRl++8mntpbnZpdGVVcmx9IgogICAgICAgICkgICMgbGluZTo2Mzg6cHJpbnQoZiLkvaDmsqHmnInloavlhaV4eXl5ZO+8jOWSi+i/kOihjO+8n1xu6LWw5LiL6YKA6K+35ZGX77yae2ludml0ZVVybH0iKQogICAgZWxzZTogICMgbGluZTo2Mzk6ZWxzZToKICAgICAgICBhY2NvdW50c19saXN0ID0gb3MuZW52aXJvbi5nZXQoInh5eXlkIikuc3BsaXQoCiAgICAgICAgICAgICImIgogICAgICAgICkgICMgbGluZTo2NDE6YWNjb3VudHNfbGlzdCA9IG9zLmVudmlyb24uZ2V0KCJ4eXl5ZCIpLnNwbGl0KCImIikKICAgICAgICBudW1fb2ZfYWNjb3VudHMgPSBsZW4oCiAgICAgICAgICAgIGFjY291bnRzX2xpc3QKICAgICAgICApICAjIGxpbmU6NjQ0Om51bV9vZl9hY2NvdW50cyA9IGxlbihhY2NvdW50c19saXN0KQogICAgICAgIHByaW50KAogICAgICAgICAgICBmIuW9k+WJjeiEmuacrOeJiOacrO+8muW5u+eUn+mtlOaUueiHqueUqOeJiCBWMS40MCBcbuW5u+eUn+aPkOekuu+8muiOt+WPluWIsCB7bnVtX29mX2FjY291bnRzfSDkuKrotKblj7dcbuazqOWGjOWcsOWdgO+8mntpbnZpdGVVcmx9IgogICAgICAgICkgICMgbGluZTo2NDc6KQogICAgICAgIGZvciBpLCBhY2NvdW50IGluIGVudW1lcmF0ZSgKICAgICAgICAgICAgYWNjb3VudHNfbGlzdCwgc3RhcnQ9MQogICAgICAgICk6ICAjIGxpbmU6NjUwOmZvciBpLCBhY2NvdW50IGluIGVudW1lcmF0ZShhY2NvdW50c19saXN0LCBzdGFydD0xKToKICAgICAgICAgICAgcHJpbnQoIi0iICogNTApICAjIGxpbmU6NjUyOnByaW50KCItIiAqIDUwKQogICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgIGYi6LSm5Y+3W3thY2NvdW50LnNwbGl0KCcjJylbMF19XeW8gOWni+aJp+ihjOS7u+WKoSA+Pj4iCiAgICAgICAgICAgICkgICMgbGluZTo2NTM6cHJpbnQoZiLotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1d5byA5aeL5omn6KGM5Lu75YqhID4+PiIpCiAgICAgICAgICAgIHZhbHVlcyA9IGFjY291bnQuc3BsaXQoIiMiKSAgIyBsaW5lOjY1Njp2YWx1ZXMgPSBhY2NvdW50LnNwbGl0KCIjIikKICAgICAgICAgICAgY2cgPSB7fSAgIyBsaW5lOjY1ODpjZyA9IHt9CiAgICAgICAgICAgIHRyeTogICMgbGluZTo2NTk6dHJ5OgogICAgICAgICAgICAgICAgaWYgbGVuKHZhbHVlcykgPT0gMzogICMgbGluZTo2NjA6aWYgbGVuKHZhbHVlcykgPT0gMzoKICAgICAgICAgICAgICAgICAgICBjZyA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB2YWx1ZXNbMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICJ5c21fdWlkIjogdmFsdWVzWzFdLAogICAgICAgICAgICAgICAgICAgICAgICAidW5pb25JZCI6IHZhbHVlc1syXSwKICAgICAgICAgICAgICAgICAgICAgICAgInR4YnoiOiAzMDAwLAogICAgICAgICAgICAgICAgICAgICAgICAiYWxpQWNjb3VudCI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAiYWxpTmFtZSI6ICIiLAogICAgICAgICAgICAgICAgICAgIH0gICMgbGluZTo2Njg6fQogICAgICAgICAgICAgICAgZWxzZTogICMgbGluZTo2Njk6ZWxzZToKICAgICAgICAgICAgICAgICAgICBjZyA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiB2YWx1ZXNbMF0sCiAgICAgICAgICAgICAgICAgICAgICAgICJ5c21fdWlkIjogdmFsdWVzWzFdLAogICAgICAgICAgICAgICAgICAgICAgICAidW5pb25JZCI6IHZhbHVlc1syXSwKICAgICAgICAgICAgICAgICAgICAgICAgInR4YnoiOiB2YWx1ZXNbM10gb3IgMzAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgImFsaUFjY291bnQiOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgImFsaU5hbWUiOiAiIiwKICAgICAgICAgICAgICAgICAgICB9ICAjIGxpbmU6Njc3On0KICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOiAgIyBsaW5lOjY3ODpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAi5bm755Sf6YC86YC85Y+oOiIsICLphY3nva7nmoTllaXnjqnmhI/vvIznvLrlj4LmlbDkuobmhqjmibnvvIznnIvmuIXohJrmnKzor7TmmI7vvIEiCiAgICAgICAgICAgICAgICApICAjIGxpbmU6NjgwOnByaW50KCLlubvnlJ/pgLzpgLzlj6g6IiwgIumFjee9rueahOWVpeeOqeaEj++8jOe8uuWPguaVsOS6huaGqOaJue+8jOeci+a4heiEmuacrOivtOaYju+8gSIpCiAgICAgICAgICAgICAgICBjb250aW51ZSAgIyBsaW5lOjY4MTpjb250aW51ZQogICAgICAgICAgICBjZ1siYXBwVG9rZW4iXSA9ICIiICAjIGxpbmU6NjgyOmNnWyJhcHBUb2tlbiJdID0gIiIKICAgICAgICAgICAgY2dbInRvcGljSWRzIl0gPSAiIiAgIyBsaW5lOjY4MzpjZ1sidG9waWNJZHMiXSA9ICIiCiAgICAgICAgICAgIGlmIGxlbih2YWx1ZXMpID49IDU6ICAjIGxpbmU6Njg1OmlmIGxlbih2YWx1ZXMpID49IDU6CiAgICAgICAgICAgICAgICBpZiB2YWx1ZXNbNF06ICAjIGxpbmU6Njg2OmlmIHZhbHVlc1s0XToKICAgICAgICAgICAgICAgICAgICBjZ1siYXBwVG9rZW4iXSA9IHZhbHVlc1s0XSAgIyBsaW5lOjY4NzpjZ1siYXBwVG9rZW4iXSA9IHZhbHVlc1s0XQogICAgICAgICAgICAgICAgZWxzZTogICMgbGluZTo2ODg6ZWxzZToKICAgICAgICAgICAgICAgICAgICBjZ1sKICAgICAgICAgICAgICAgICAgICAgICAgImFwcFRva2VuIgogICAgICAgICAgICAgICAgICAgIF0gPSB3eHB1c2hlckFwcFRva2VuICAjIGxpbmU6Njg5OmNnWyJhcHBUb2tlbiJdID0gd3hwdXNoZXJBcHBUb2tlbgogICAgICAgICAgICBpZiBsZW4odmFsdWVzKSA+PSA2OiAgIyBsaW5lOjY5MDppZiBsZW4odmFsdWVzKSA+PSA2OgogICAgICAgICAgICAgICAgaWYgdmFsdWVzWzVdOiAgIyBsaW5lOjY5MTppZiB2YWx1ZXNbNV06CiAgICAgICAgICAgICAgICAgICAgY2dbInRvcGljSWRzIl0gPSB2YWx1ZXNbNV0gICMgbGluZTo2OTI6Y2dbInRvcGljSWRzIl0gPSB2YWx1ZXNbNV0KICAgICAgICAgICAgICAgIGVsc2U6ICAjIGxpbmU6NjkzOmVsc2U6CiAgICAgICAgICAgICAgICAgICAgY2dbCiAgICAgICAgICAgICAgICAgICAgICAgICJ0b3BpY0lkcyIKICAgICAgICAgICAgICAgICAgICBdID0gd3hwdXNoZXJUb3BpY0lkICAjIGxpbmU6Njk0OmNnWyJ0b3BpY0lkcyJdID0gd3hwdXNoZXJUb3BpY0lkCiAgICAgICAgICAgIGlmIGxlbih2YWx1ZXMpID49IDc6ICAjIGxpbmU6Njk1OmlmIGxlbih2YWx1ZXMpID49IDc6CiAgICAgICAgICAgICAgICBpZiB2YWx1ZXNbNl06ICAjIGxpbmU6Njk2OmlmIHZhbHVlc1s2XToKICAgICAgICAgICAgICAgICAgICBjZ1siYWxpTmFtZSJdID0gdmFsdWVzWzZdICAjIGxpbmU6Njk3OmNnWyJhbGlOYW1lIl0gPSB2YWx1ZXNbNl0KICAgICAgICAgICAgaWYgbGVuKHZhbHVlcykgPj0gODogICMgbGluZTo2OTg6aWYgbGVuKHZhbHVlcykgPj0gODoKICAgICAgICAgICAgICAgIGlmIHZhbHVlc1s3XTogICMgbGluZTo2OTk6aWYgdmFsdWVzWzddOgogICAgICAgICAgICAgICAgICAgIGNnWyJhbGlBY2NvdW50Il0gPSB2YWx1ZXNbCiAgICAgICAgICAgICAgICAgICAgICAgIDcKICAgICAgICAgICAgICAgICAgICBdICAjIGxpbmU6NzAwOmNnWyJhbGlBY2NvdW50Il0gPSB2YWx1ZXNbN10KICAgICAgICAgICAgdHJ5OiAgIyBsaW5lOjcwMTp0cnk6CiAgICAgICAgICAgICAgICBpZiB3ZWNoYXRCdXNzaW5lc3NLZXkgPT0gIiI6ICAjIGxpbmU6NzAyOmlmIHdlY2hhdEJ1c3NpbmVzc0tleSA9PSAiIjoKICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgIGNnWyJhcHBUb2tlbiJdLnN0YXJ0c3dpdGgoIkFUXyIpID09IEZhbHNlCiAgICAgICAgICAgICAgICAgICAgKTogICMgbGluZTo3MDM6aWYgY2dbImFwcFRva2VuIl0uc3RhcnRzd2l0aCgiQVRfIikgPT0gRmFsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIHd4cHVzaCDphY3nva7plJnor6/vvIzlv6vku5Tnu4bnnIvlpLTpg6jor7TmmI7vvIEiCiAgICAgICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo3MDQ6cHJpbnQoZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIHd4cHVzaCDphY3nva7plJnor6/vvIzlv6vku5Tnu4bnnIvlpLTpg6jor7TmmI7vvIEiKQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZSAgIyBsaW5lOjcwNTpjb250aW51ZQogICAgICAgICAgICAgICAgICAgIGlmIChjZ1siYXBwVG9rZW4iXS5zdGFydHN3aXRoKCJBVF8iKSA9PSBGYWxzZSkgb3IgKAogICAgICAgICAgICAgICAgICAgICAgICBjZ1sidG9waWNJZHMiXS5pc2RpZ2l0KCkgPT0gRmFsc2UKICAgICAgICAgICAgICAgICAgICApOiAgIyBsaW5lOjcwODopOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYi5bm755Sf5o+Q56S677yM6LSm5Y+3W3thY2NvdW50LnNwbGl0KCcjJylbMF19XSB3eHB1c2gg6YWN572u6ZSZ6K+v77yM5b+r5LuU57uG55yL5aS06YOo6K+05piO77yBIgogICAgICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NzA5OnByaW50KGYi5bm755Sf5o+Q56S677yM6LSm5Y+3W3thY2NvdW50LnNwbGl0KCcjJylbMF19XSB3eHB1c2gg6YWN572u6ZSZ6K+v77yM5b+r5LuU57uG55yL5aS06YOo6K+05piO77yBIikKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUgICMgbGluZTo3MTA6Y29udGludWUKICAgICAgICAgICAgICAgIGFwaSA9IEhIWUQoY2cpICAjIGxpbmU6NzExOmFwaSA9IEhIWUQoY2cpCiAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgY2dbImFsaU5hbWUiXSBhbmQgY2dbImFsaUFjY291bnQiXQogICAgICAgICAgICAgICAgKTogICMgbGluZTo3MTI6aWYgY2dbImFsaU5hbWUiXSBhbmQgY2dbImFsaUFjY291bnQiXToKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIOmHh+eUqOS6hiDmlK/ku5jlrp3mj5DnjrDvvIzlp5PlkI3vvJp7Y2dbJ2FsaU5hbWUnXX3vvIzotKbmiLfvvJp7Y2dbJ2FsaUFjY291bnQnXX0iCiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjcxNTopCiAgICAgICAgICAgICAgICBlbHNlOiAgIyBsaW5lOjcxNjplbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICBmIuW5u+eUn+aPkOekuu+8jOi0puWPt1t7YWNjb3VudC5zcGxpdCgnIycpWzBdfV0g6YeH55So5LqGIOW+ruS/oeaPkOeOsCIKICAgICAgICAgICAgICAgICAgICApICAjIGxpbmU6NzE3OnByaW50KGYi5bm755Sf5o+Q56S677yM6LSm5Y+3W3thY2NvdW50LnNwbGl0KCcjJylbMF19XSDph4fnlKjkuoYg5b6u5L+h5o+Q546wIikKICAgICAgICAgICAgICAgIGFwaS5ydW4oKSAgIyBsaW5lOjcxODphcGkucnVuKCkKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOiAgIyBsaW5lOjcxOTpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBpZiAiRXhwZWN0aW5nIHZhbHVlOiBsaW5lIDEgY29sdW1uIDEiIGluIHN0cigKICAgICAgICAgICAgICAgICAgICBlCiAgICAgICAgICAgICAgICApOiAgIyBsaW5lOjcyMDppZiAiRXhwZWN0aW5nIHZhbHVlOiBsaW5lIDEgY29sdW1uIDEiIGluIHN0cihlKToKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIOeWkeS8vCB1bmlvbklk5Ye66ZSZ77yM5o2i5LiA5Liq5ZCn77yBIgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo3MjE6cHJpbnQoZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIOeWkeS8vCB1bmlvbklk5Ye66ZSZ77yM5o2i5LiA5Liq5ZCn77yBIikKICAgICAgICAgICAgICAgIGVsaWYgImxpbmsnIGlzIG5vdCBkZWZpbmVkIiBpbiBzdHIoCiAgICAgICAgICAgICAgICAgICAgZQogICAgICAgICAgICAgICAgKTogICMgbGluZTo3MjI6ZWxpZiAibGluaycgaXMgbm90IGRlZmluZWQiIGluIHN0cihlKToKICAgICAgICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIOeWkeS8vCDmlrDlj7fnmoTmn5Dnp43ljp/lm6Dlr7zoh7TnmoTml6Dms5XpmIXor7vvvIzor7fmiYvliqjpmIXor7vkuKTnr4flho3or5Xor5XlkKfvvIEiCiAgICAgICAgICAgICAgICAgICAgKSAgIyBsaW5lOjcyNTopCiAgICAgICAgICAgICAgICBlbHNlOiAgIyBsaW5lOjcyNjplbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICBmIuW5u+eUn+aPkOekuu+8jOi0puWPt1t7YWNjb3VudC5zcGxpdCgnIycpWzBdfV0g5Ye66ZSZ5ZWm77yM6K+35bCG5LiL6Z2i5oql6ZSZ5oiq5Zu+5Y+R5YiwdGfkuqTmtYHnvqQ6IgogICAgICAgICAgICAgICAgICAgICkgICMgbGluZTo3Mjc6cHJpbnQoZiLlubvnlJ/mj5DnpLrvvIzotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1dIOWHuumUmeWVpu+8jOivt+WwhuS4i+mdouaKpemUmeaIquWbvuWPkeWIsHRn5Lqk5rWB576kOiIpCiAgICAgICAgICAgICAgICByYWlzZSBlICAjIGxpbmU6NzI4OnJhaXNlIGUKICAgICAgICAgICAgICAgIGNvbnRpbnVlICAjIGxpbmU6NzI5OmNvbnRpbnVlCiAgICAgICAgICAgIHByaW50KCItIiAqIDUwKSAgIyBsaW5lOjczMTpwcmludCgiLSIgKiA1MCkKICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICBmIui0puWPt1t7YWNjb3VudC5zcGxpdCgnIycpWzBdfV3miafooYzku7vliqHlrozmr5XvvIEiCiAgICAgICAgICAgICkgICMgbGluZTo3MzI6cHJpbnQoZiLotKblj7dbe2FjY291bnQuc3BsaXQoJyMnKVswXX1d5omn6KGM5Lu75Yqh5a6M5q+V77yBIikK'))
except Exception as e:
    print('脚本执行出错:', str(e))
